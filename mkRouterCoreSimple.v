//
// Generated by Bluespec Compiler, version 2025.01.1-9-g76db531e (build 76db531e)
//
// On Thu Jul 31 18:29:10 PDT 2025
//
//
// Ports:
// Name                         I/O  size props
// in_ports_0_getNonFullVCs       O     2 reg
// in_ports_1_getNonFullVCs       O     2 reg
// in_ports_2_getNonFullVCs       O     2 reg
// in_ports_3_getNonFullVCs       O     2 reg
// in_ports_4_getNonFullVCs       O     2 reg
// out_ports_0_getFlit            O   263
// out_ports_1_getFlit            O   263
// out_ports_2_getFlit            O   263
// out_ports_3_getFlit            O   263
// out_ports_4_getFlit            O   263
// CLK                            I     1 clock
// RST_N                          I     1 reset
// in_ports_0_putRoutedFlit_flit_in  I   266
// in_ports_1_putRoutedFlit_flit_in  I   266
// in_ports_2_putRoutedFlit_flit_in  I   266
// in_ports_3_putRoutedFlit_flit_in  I   266
// in_ports_4_putRoutedFlit_flit_in  I   266
// out_ports_0_putNonFullVCs_nonFullVCs  I     2
// out_ports_1_putNonFullVCs_nonFullVCs  I     2
// out_ports_2_putNonFullVCs_nonFullVCs  I     2
// out_ports_3_putNonFullVCs_nonFullVCs  I     2
// out_ports_4_putNonFullVCs_nonFullVCs  I     2
// EN_in_ports_0_putRoutedFlit    I     1
// EN_in_ports_1_putRoutedFlit    I     1
// EN_in_ports_2_putRoutedFlit    I     1
// EN_in_ports_3_putRoutedFlit    I     1
// EN_in_ports_4_putRoutedFlit    I     1
// EN_out_ports_0_putNonFullVCs   I     1
// EN_out_ports_1_putNonFullVCs   I     1
// EN_out_ports_2_putNonFullVCs   I     1
// EN_out_ports_3_putNonFullVCs   I     1
// EN_out_ports_4_putNonFullVCs   I     1
// EN_in_ports_0_getNonFullVCs    I     1 unused
// EN_in_ports_1_getNonFullVCs    I     1 unused
// EN_in_ports_2_getNonFullVCs    I     1 unused
// EN_in_ports_3_getNonFullVCs    I     1 unused
// EN_in_ports_4_getNonFullVCs    I     1 unused
// EN_out_ports_0_getFlit         I     1
// EN_out_ports_1_getFlit         I     1
// EN_out_ports_2_getFlit         I     1
// EN_out_ports_3_getFlit         I     1
// EN_out_ports_4_getFlit         I     1
//
// Combinational paths from inputs to outputs:
//   (out_ports_0_putNonFullVCs_nonFullVCs,
//    out_ports_1_putNonFullVCs_nonFullVCs,
//    out_ports_2_putNonFullVCs_nonFullVCs,
//    out_ports_3_putNonFullVCs_nonFullVCs,
//    out_ports_4_putNonFullVCs_nonFullVCs,
//    EN_out_ports_0_putNonFullVCs,
//    EN_out_ports_1_putNonFullVCs,
//    EN_out_ports_2_putNonFullVCs,
//    EN_out_ports_3_putNonFullVCs,
//    EN_out_ports_4_putNonFullVCs) -> out_ports_0_getFlit
//   (out_ports_0_putNonFullVCs_nonFullVCs,
//    out_ports_1_putNonFullVCs_nonFullVCs,
//    out_ports_2_putNonFullVCs_nonFullVCs,
//    out_ports_3_putNonFullVCs_nonFullVCs,
//    out_ports_4_putNonFullVCs_nonFullVCs,
//    EN_out_ports_0_putNonFullVCs,
//    EN_out_ports_1_putNonFullVCs,
//    EN_out_ports_2_putNonFullVCs,
//    EN_out_ports_3_putNonFullVCs,
//    EN_out_ports_4_putNonFullVCs) -> out_ports_1_getFlit
//   (out_ports_0_putNonFullVCs_nonFullVCs,
//    out_ports_1_putNonFullVCs_nonFullVCs,
//    out_ports_2_putNonFullVCs_nonFullVCs,
//    out_ports_3_putNonFullVCs_nonFullVCs,
//    out_ports_4_putNonFullVCs_nonFullVCs,
//    EN_out_ports_0_putNonFullVCs,
//    EN_out_ports_1_putNonFullVCs,
//    EN_out_ports_2_putNonFullVCs,
//    EN_out_ports_3_putNonFullVCs,
//    EN_out_ports_4_putNonFullVCs) -> out_ports_2_getFlit
//   (out_ports_0_putNonFullVCs_nonFullVCs,
//    out_ports_1_putNonFullVCs_nonFullVCs,
//    out_ports_2_putNonFullVCs_nonFullVCs,
//    out_ports_3_putNonFullVCs_nonFullVCs,
//    out_ports_4_putNonFullVCs_nonFullVCs,
//    EN_out_ports_0_putNonFullVCs,
//    EN_out_ports_1_putNonFullVCs,
//    EN_out_ports_2_putNonFullVCs,
//    EN_out_ports_3_putNonFullVCs,
//    EN_out_ports_4_putNonFullVCs) -> out_ports_3_getFlit
//   (out_ports_0_putNonFullVCs_nonFullVCs,
//    out_ports_1_putNonFullVCs_nonFullVCs,
//    out_ports_2_putNonFullVCs_nonFullVCs,
//    out_ports_3_putNonFullVCs_nonFullVCs,
//    out_ports_4_putNonFullVCs_nonFullVCs,
//    EN_out_ports_0_putNonFullVCs,
//    EN_out_ports_1_putNonFullVCs,
//    EN_out_ports_2_putNonFullVCs,
//    EN_out_ports_3_putNonFullVCs,
//    EN_out_ports_4_putNonFullVCs) -> out_ports_4_getFlit
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkRouterCoreSimple(CLK,
			  RST_N,

			  in_ports_0_putRoutedFlit_flit_in,
			  EN_in_ports_0_putRoutedFlit,

			  EN_in_ports_0_getNonFullVCs,
			  in_ports_0_getNonFullVCs,

			  in_ports_1_putRoutedFlit_flit_in,
			  EN_in_ports_1_putRoutedFlit,

			  EN_in_ports_1_getNonFullVCs,
			  in_ports_1_getNonFullVCs,

			  in_ports_2_putRoutedFlit_flit_in,
			  EN_in_ports_2_putRoutedFlit,

			  EN_in_ports_2_getNonFullVCs,
			  in_ports_2_getNonFullVCs,

			  in_ports_3_putRoutedFlit_flit_in,
			  EN_in_ports_3_putRoutedFlit,

			  EN_in_ports_3_getNonFullVCs,
			  in_ports_3_getNonFullVCs,

			  in_ports_4_putRoutedFlit_flit_in,
			  EN_in_ports_4_putRoutedFlit,

			  EN_in_ports_4_getNonFullVCs,
			  in_ports_4_getNonFullVCs,

			  EN_out_ports_0_getFlit,
			  out_ports_0_getFlit,

			  out_ports_0_putNonFullVCs_nonFullVCs,
			  EN_out_ports_0_putNonFullVCs,

			  EN_out_ports_1_getFlit,
			  out_ports_1_getFlit,

			  out_ports_1_putNonFullVCs_nonFullVCs,
			  EN_out_ports_1_putNonFullVCs,

			  EN_out_ports_2_getFlit,
			  out_ports_2_getFlit,

			  out_ports_2_putNonFullVCs_nonFullVCs,
			  EN_out_ports_2_putNonFullVCs,

			  EN_out_ports_3_getFlit,
			  out_ports_3_getFlit,

			  out_ports_3_putNonFullVCs_nonFullVCs,
			  EN_out_ports_3_putNonFullVCs,

			  EN_out_ports_4_getFlit,
			  out_ports_4_getFlit,

			  out_ports_4_putNonFullVCs_nonFullVCs,
			  EN_out_ports_4_putNonFullVCs);
  input  CLK;
  input  RST_N;

  // action method in_ports_0_putRoutedFlit
  input  [265 : 0] in_ports_0_putRoutedFlit_flit_in;
  input  EN_in_ports_0_putRoutedFlit;

  // actionvalue method in_ports_0_getNonFullVCs
  input  EN_in_ports_0_getNonFullVCs;
  output [1 : 0] in_ports_0_getNonFullVCs;

  // action method in_ports_1_putRoutedFlit
  input  [265 : 0] in_ports_1_putRoutedFlit_flit_in;
  input  EN_in_ports_1_putRoutedFlit;

  // actionvalue method in_ports_1_getNonFullVCs
  input  EN_in_ports_1_getNonFullVCs;
  output [1 : 0] in_ports_1_getNonFullVCs;

  // action method in_ports_2_putRoutedFlit
  input  [265 : 0] in_ports_2_putRoutedFlit_flit_in;
  input  EN_in_ports_2_putRoutedFlit;

  // actionvalue method in_ports_2_getNonFullVCs
  input  EN_in_ports_2_getNonFullVCs;
  output [1 : 0] in_ports_2_getNonFullVCs;

  // action method in_ports_3_putRoutedFlit
  input  [265 : 0] in_ports_3_putRoutedFlit_flit_in;
  input  EN_in_ports_3_putRoutedFlit;

  // actionvalue method in_ports_3_getNonFullVCs
  input  EN_in_ports_3_getNonFullVCs;
  output [1 : 0] in_ports_3_getNonFullVCs;

  // action method in_ports_4_putRoutedFlit
  input  [265 : 0] in_ports_4_putRoutedFlit_flit_in;
  input  EN_in_ports_4_putRoutedFlit;

  // actionvalue method in_ports_4_getNonFullVCs
  input  EN_in_ports_4_getNonFullVCs;
  output [1 : 0] in_ports_4_getNonFullVCs;

  // actionvalue method out_ports_0_getFlit
  input  EN_out_ports_0_getFlit;
  output [262 : 0] out_ports_0_getFlit;

  // action method out_ports_0_putNonFullVCs
  input  [1 : 0] out_ports_0_putNonFullVCs_nonFullVCs;
  input  EN_out_ports_0_putNonFullVCs;

  // actionvalue method out_ports_1_getFlit
  input  EN_out_ports_1_getFlit;
  output [262 : 0] out_ports_1_getFlit;

  // action method out_ports_1_putNonFullVCs
  input  [1 : 0] out_ports_1_putNonFullVCs_nonFullVCs;
  input  EN_out_ports_1_putNonFullVCs;

  // actionvalue method out_ports_2_getFlit
  input  EN_out_ports_2_getFlit;
  output [262 : 0] out_ports_2_getFlit;

  // action method out_ports_2_putNonFullVCs
  input  [1 : 0] out_ports_2_putNonFullVCs_nonFullVCs;
  input  EN_out_ports_2_putNonFullVCs;

  // actionvalue method out_ports_3_getFlit
  input  EN_out_ports_3_getFlit;
  output [262 : 0] out_ports_3_getFlit;

  // action method out_ports_3_putNonFullVCs
  input  [1 : 0] out_ports_3_putNonFullVCs_nonFullVCs;
  input  EN_out_ports_3_putNonFullVCs;

  // actionvalue method out_ports_4_getFlit
  input  EN_out_ports_4_getFlit;
  output [262 : 0] out_ports_4_getFlit;

  // action method out_ports_4_putNonFullVCs
  input  [1 : 0] out_ports_4_putNonFullVCs_nonFullVCs;
  input  EN_out_ports_4_putNonFullVCs;

  // signals for module outputs
  wire [262 : 0] out_ports_0_getFlit,
		 out_ports_1_getFlit,
		 out_ports_2_getFlit,
		 out_ports_3_getFlit,
		 out_ports_4_getFlit;
  wire [1 : 0] in_ports_0_getNonFullVCs,
	       in_ports_1_getNonFullVCs,
	       in_ports_2_getNonFullVCs,
	       in_ports_3_getNonFullVCs,
	       in_ports_4_getNonFullVCs;

  // inlined wires
  wire [262 : 0] hasFlitsToSend_perIn_0$wget,
		 hasFlitsToSend_perIn_1$wget,
		 hasFlitsToSend_perIn_2$wget,
		 hasFlitsToSend_perIn_3$wget,
		 hasFlitsToSend_perIn_4$wget;

  // register activeVC_perIn_reg_0
  reg [1 : 0] activeVC_perIn_reg_0;
  wire [1 : 0] activeVC_perIn_reg_0$D_IN;
  wire activeVC_perIn_reg_0$EN;

  // register activeVC_perIn_reg_1
  reg [1 : 0] activeVC_perIn_reg_1;
  wire [1 : 0] activeVC_perIn_reg_1$D_IN;
  wire activeVC_perIn_reg_1$EN;

  // register activeVC_perIn_reg_2
  reg [1 : 0] activeVC_perIn_reg_2;
  wire [1 : 0] activeVC_perIn_reg_2$D_IN;
  wire activeVC_perIn_reg_2$EN;

  // register activeVC_perIn_reg_3
  reg [1 : 0] activeVC_perIn_reg_3;
  wire [1 : 0] activeVC_perIn_reg_3$D_IN;
  wire activeVC_perIn_reg_3$EN;

  // register activeVC_perIn_reg_4
  reg [1 : 0] activeVC_perIn_reg_4;
  wire [1 : 0] activeVC_perIn_reg_4$D_IN;
  wire activeVC_perIn_reg_4$EN;

  // register inPortVL_0_0
  reg [2 : 0] inPortVL_0_0;
  wire [2 : 0] inPortVL_0_0$D_IN;
  wire inPortVL_0_0$EN;

  // register inPortVL_0_1
  reg [2 : 0] inPortVL_0_1;
  wire [2 : 0] inPortVL_0_1$D_IN;
  wire inPortVL_0_1$EN;

  // register inPortVL_1_0
  reg [2 : 0] inPortVL_1_0;
  wire [2 : 0] inPortVL_1_0$D_IN;
  wire inPortVL_1_0$EN;

  // register inPortVL_1_1
  reg [2 : 0] inPortVL_1_1;
  wire [2 : 0] inPortVL_1_1$D_IN;
  wire inPortVL_1_1$EN;

  // register inPortVL_2_0
  reg [2 : 0] inPortVL_2_0;
  wire [2 : 0] inPortVL_2_0$D_IN;
  wire inPortVL_2_0$EN;

  // register inPortVL_2_1
  reg [2 : 0] inPortVL_2_1;
  wire [2 : 0] inPortVL_2_1$D_IN;
  wire inPortVL_2_1$EN;

  // register inPortVL_3_0
  reg [2 : 0] inPortVL_3_0;
  wire [2 : 0] inPortVL_3_0$D_IN;
  wire inPortVL_3_0$EN;

  // register inPortVL_3_1
  reg [2 : 0] inPortVL_3_1;
  wire [2 : 0] inPortVL_3_1$D_IN;
  wire inPortVL_3_1$EN;

  // register inPortVL_4_0
  reg [2 : 0] inPortVL_4_0;
  wire [2 : 0] inPortVL_4_0$D_IN;
  wire inPortVL_4_0$EN;

  // register inPortVL_4_1
  reg [2 : 0] inPortVL_4_1;
  wire [2 : 0] inPortVL_4_1$D_IN;
  wire inPortVL_4_1$EN;

  // register lockedVL_0_0
  reg lockedVL_0_0;
  wire lockedVL_0_0$D_IN, lockedVL_0_0$EN;

  // register lockedVL_0_1
  reg lockedVL_0_1;
  wire lockedVL_0_1$D_IN, lockedVL_0_1$EN;

  // register lockedVL_1_0
  reg lockedVL_1_0;
  wire lockedVL_1_0$D_IN, lockedVL_1_0$EN;

  // register lockedVL_1_1
  reg lockedVL_1_1;
  wire lockedVL_1_1$D_IN, lockedVL_1_1$EN;

  // register lockedVL_2_0
  reg lockedVL_2_0;
  wire lockedVL_2_0$D_IN, lockedVL_2_0$EN;

  // register lockedVL_2_1
  reg lockedVL_2_1;
  wire lockedVL_2_1$D_IN, lockedVL_2_1$EN;

  // register lockedVL_3_0
  reg lockedVL_3_0;
  wire lockedVL_3_0$D_IN, lockedVL_3_0$EN;

  // register lockedVL_3_1
  reg lockedVL_3_1;
  wire lockedVL_3_1$D_IN, lockedVL_3_1$EN;

  // register lockedVL_4_0
  reg lockedVL_4_0;
  wire lockedVL_4_0$D_IN, lockedVL_4_0$EN;

  // register lockedVL_4_1
  reg lockedVL_4_1;
  wire lockedVL_4_1$D_IN, lockedVL_4_1$EN;

  // register selectedIO_reg_0_0
  reg selectedIO_reg_0_0;
  wire selectedIO_reg_0_0$D_IN, selectedIO_reg_0_0$EN;

  // register selectedIO_reg_0_1
  reg selectedIO_reg_0_1;
  wire selectedIO_reg_0_1$D_IN, selectedIO_reg_0_1$EN;

  // register selectedIO_reg_0_2
  reg selectedIO_reg_0_2;
  wire selectedIO_reg_0_2$D_IN, selectedIO_reg_0_2$EN;

  // register selectedIO_reg_0_3
  reg selectedIO_reg_0_3;
  wire selectedIO_reg_0_3$D_IN, selectedIO_reg_0_3$EN;

  // register selectedIO_reg_0_4
  reg selectedIO_reg_0_4;
  wire selectedIO_reg_0_4$D_IN, selectedIO_reg_0_4$EN;

  // register selectedIO_reg_1_0
  reg selectedIO_reg_1_0;
  wire selectedIO_reg_1_0$D_IN, selectedIO_reg_1_0$EN;

  // register selectedIO_reg_1_1
  reg selectedIO_reg_1_1;
  wire selectedIO_reg_1_1$D_IN, selectedIO_reg_1_1$EN;

  // register selectedIO_reg_1_2
  reg selectedIO_reg_1_2;
  wire selectedIO_reg_1_2$D_IN, selectedIO_reg_1_2$EN;

  // register selectedIO_reg_1_3
  reg selectedIO_reg_1_3;
  wire selectedIO_reg_1_3$D_IN, selectedIO_reg_1_3$EN;

  // register selectedIO_reg_1_4
  reg selectedIO_reg_1_4;
  wire selectedIO_reg_1_4$D_IN, selectedIO_reg_1_4$EN;

  // register selectedIO_reg_2_0
  reg selectedIO_reg_2_0;
  wire selectedIO_reg_2_0$D_IN, selectedIO_reg_2_0$EN;

  // register selectedIO_reg_2_1
  reg selectedIO_reg_2_1;
  wire selectedIO_reg_2_1$D_IN, selectedIO_reg_2_1$EN;

  // register selectedIO_reg_2_2
  reg selectedIO_reg_2_2;
  wire selectedIO_reg_2_2$D_IN, selectedIO_reg_2_2$EN;

  // register selectedIO_reg_2_3
  reg selectedIO_reg_2_3;
  wire selectedIO_reg_2_3$D_IN, selectedIO_reg_2_3$EN;

  // register selectedIO_reg_2_4
  reg selectedIO_reg_2_4;
  wire selectedIO_reg_2_4$D_IN, selectedIO_reg_2_4$EN;

  // register selectedIO_reg_3_0
  reg selectedIO_reg_3_0;
  wire selectedIO_reg_3_0$D_IN, selectedIO_reg_3_0$EN;

  // register selectedIO_reg_3_1
  reg selectedIO_reg_3_1;
  wire selectedIO_reg_3_1$D_IN, selectedIO_reg_3_1$EN;

  // register selectedIO_reg_3_2
  reg selectedIO_reg_3_2;
  wire selectedIO_reg_3_2$D_IN, selectedIO_reg_3_2$EN;

  // register selectedIO_reg_3_3
  reg selectedIO_reg_3_3;
  wire selectedIO_reg_3_3$D_IN, selectedIO_reg_3_3$EN;

  // register selectedIO_reg_3_4
  reg selectedIO_reg_3_4;
  wire selectedIO_reg_3_4$D_IN, selectedIO_reg_3_4$EN;

  // register selectedIO_reg_4_0
  reg selectedIO_reg_4_0;
  wire selectedIO_reg_4_0$D_IN, selectedIO_reg_4_0$EN;

  // register selectedIO_reg_4_1
  reg selectedIO_reg_4_1;
  wire selectedIO_reg_4_1$D_IN, selectedIO_reg_4_1$EN;

  // register selectedIO_reg_4_2
  reg selectedIO_reg_4_2;
  wire selectedIO_reg_4_2$D_IN, selectedIO_reg_4_2$EN;

  // register selectedIO_reg_4_3
  reg selectedIO_reg_4_3;
  wire selectedIO_reg_4_3$D_IN, selectedIO_reg_4_3$EN;

  // register selectedIO_reg_4_4
  reg selectedIO_reg_4_4;
  wire selectedIO_reg_4_4$D_IN, selectedIO_reg_4_4$EN;

  // ports of submodule flitBuffers_0
  wire [261 : 0] flitBuffers_0$deq, flitBuffers_0$enq_data_in;
  wire [1 : 0] flitBuffers_0$notEmpty, flitBuffers_0$notFull;
  wire flitBuffers_0$EN_deq,
       flitBuffers_0$EN_enq,
       flitBuffers_0$deq_fifo_out,
       flitBuffers_0$enq_fifo_in;

  // ports of submodule flitBuffers_1
  wire [261 : 0] flitBuffers_1$deq, flitBuffers_1$enq_data_in;
  wire [1 : 0] flitBuffers_1$notEmpty, flitBuffers_1$notFull;
  wire flitBuffers_1$EN_deq,
       flitBuffers_1$EN_enq,
       flitBuffers_1$deq_fifo_out,
       flitBuffers_1$enq_fifo_in;

  // ports of submodule flitBuffers_2
  wire [261 : 0] flitBuffers_2$deq, flitBuffers_2$enq_data_in;
  wire [1 : 0] flitBuffers_2$notEmpty, flitBuffers_2$notFull;
  wire flitBuffers_2$EN_deq,
       flitBuffers_2$EN_enq,
       flitBuffers_2$deq_fifo_out,
       flitBuffers_2$enq_fifo_in;

  // ports of submodule flitBuffers_3
  wire [261 : 0] flitBuffers_3$deq, flitBuffers_3$enq_data_in;
  wire [1 : 0] flitBuffers_3$notEmpty, flitBuffers_3$notFull;
  wire flitBuffers_3$EN_deq,
       flitBuffers_3$EN_enq,
       flitBuffers_3$deq_fifo_out,
       flitBuffers_3$enq_fifo_in;

  // ports of submodule flitBuffers_4
  wire [261 : 0] flitBuffers_4$deq, flitBuffers_4$enq_data_in;
  wire [1 : 0] flitBuffers_4$notEmpty, flitBuffers_4$notFull;
  wire flitBuffers_4$EN_deq,
       flitBuffers_4$EN_enq,
       flitBuffers_4$deq_fifo_out,
       flitBuffers_4$enq_fifo_in;

  // ports of submodule outPortFIFOs_0_0
  wire [2 : 0] outPortFIFOs_0_0$enq_sendData, outPortFIFOs_0_0$first;
  wire outPortFIFOs_0_0$EN_clear,
       outPortFIFOs_0_0$EN_deq,
       outPortFIFOs_0_0$EN_enq;

  // ports of submodule outPortFIFOs_0_1
  wire [2 : 0] outPortFIFOs_0_1$enq_sendData, outPortFIFOs_0_1$first;
  wire outPortFIFOs_0_1$EN_clear,
       outPortFIFOs_0_1$EN_deq,
       outPortFIFOs_0_1$EN_enq;

  // ports of submodule outPortFIFOs_1_0
  wire [2 : 0] outPortFIFOs_1_0$enq_sendData, outPortFIFOs_1_0$first;
  wire outPortFIFOs_1_0$EN_clear,
       outPortFIFOs_1_0$EN_deq,
       outPortFIFOs_1_0$EN_enq;

  // ports of submodule outPortFIFOs_1_1
  wire [2 : 0] outPortFIFOs_1_1$enq_sendData, outPortFIFOs_1_1$first;
  wire outPortFIFOs_1_1$EN_clear,
       outPortFIFOs_1_1$EN_deq,
       outPortFIFOs_1_1$EN_enq;

  // ports of submodule outPortFIFOs_2_0
  wire [2 : 0] outPortFIFOs_2_0$enq_sendData, outPortFIFOs_2_0$first;
  wire outPortFIFOs_2_0$EN_clear,
       outPortFIFOs_2_0$EN_deq,
       outPortFIFOs_2_0$EN_enq;

  // ports of submodule outPortFIFOs_2_1
  wire [2 : 0] outPortFIFOs_2_1$enq_sendData, outPortFIFOs_2_1$first;
  wire outPortFIFOs_2_1$EN_clear,
       outPortFIFOs_2_1$EN_deq,
       outPortFIFOs_2_1$EN_enq;

  // ports of submodule outPortFIFOs_3_0
  wire [2 : 0] outPortFIFOs_3_0$enq_sendData, outPortFIFOs_3_0$first;
  wire outPortFIFOs_3_0$EN_clear,
       outPortFIFOs_3_0$EN_deq,
       outPortFIFOs_3_0$EN_enq;

  // ports of submodule outPortFIFOs_3_1
  wire [2 : 0] outPortFIFOs_3_1$enq_sendData, outPortFIFOs_3_1$first;
  wire outPortFIFOs_3_1$EN_clear,
       outPortFIFOs_3_1$EN_deq,
       outPortFIFOs_3_1$EN_enq;

  // ports of submodule outPortFIFOs_4_0
  wire [2 : 0] outPortFIFOs_4_0$enq_sendData, outPortFIFOs_4_0$first;
  wire outPortFIFOs_4_0$EN_clear,
       outPortFIFOs_4_0$EN_deq,
       outPortFIFOs_4_0$EN_enq;

  // ports of submodule outPortFIFOs_4_1
  wire [2 : 0] outPortFIFOs_4_1$enq_sendData, outPortFIFOs_4_1$first;
  wire outPortFIFOs_4_1$EN_clear,
       outPortFIFOs_4_1$EN_deq,
       outPortFIFOs_4_1$EN_enq;

  // ports of submodule routerAlloc
  wire [24 : 0] routerAlloc$allocate, routerAlloc$allocate_alloc_input;
  wire routerAlloc$EN_allocate, routerAlloc$EN_next;

  // remaining internal signals
  reg [255 : 0] SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751,
		SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812,
		SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873,
		SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934,
		SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995;
  reg [3 : 0] SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744,
	      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811,
	      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872,
	      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933,
	      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994;
  reg [2 : 0] SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126,
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177,
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229,
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280,
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41,
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142,
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193,
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245,
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296,
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91;
  reg SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704,
      SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795,
      SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856,
      SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917,
      SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978,
      SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124,
      SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175,
      SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227,
      SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278,
      SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32,
      SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140,
      SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191,
      SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243,
      SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294,
      SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82,
      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728,
      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801,
      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862,
      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923,
      SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984,
      SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712,
      SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797,
      SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858,
      SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919,
      SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980,
      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125,
      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176,
      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228,
      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279,
      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34,
      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141,
      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192,
      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244,
      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295,
      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84,
      SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123,
      SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174,
      SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20,
      SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226,
      SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277,
      SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139,
      SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190,
      SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242,
      SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293,
      SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70,
      active_vc__h41727,
      active_vc__h43952,
      active_vc__h46177,
      active_vc__h48402,
      active_vc__h50627;
  wire [4 : 0] IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d117,
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d168,
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d219,
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d271,
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d322,
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d118,
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d169,
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d220,
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d272,
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d323,
	       IF_flitBuffers_0_notEmpty__74_BIT_0_75_THEN_IF_ETC___d324,
	       IF_flitBuffers_1_notEmpty__23_BIT_0_24_THEN_IF_ETC___d273,
	       IF_flitBuffers_2_notEmpty__71_BIT_0_72_THEN_IF_ETC___d221,
	       IF_flitBuffers_3_notEmpty__20_BIT_0_21_THEN_IF_ETC___d170,
	       IF_flitBuffers_4_notEmpty_BIT_0_THEN_IF_SEL_AR_ETC___d119;
  wire [3 : 0] outport_encoder___d369,
	       outport_encoder___d413,
	       outport_encoder___d457,
	       outport_encoder___d501,
	       outport_encoder___d545;
  wire [2 : 0] IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d700,
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d791,
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d852,
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d913,
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d974,
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d696,
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d787,
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d848,
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d909,
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d970,
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d698,
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d789,
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d850,
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d911,
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d972,
	       active_in__h40944,
	       active_in__h43333,
	       active_in__h45558,
	       active_in__h47783,
	       active_in__h50008;
  wire IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d643,
       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d766,
       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d827,
       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d888,
       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d949,
       IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d658,
       IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d780,
       IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d841,
       IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d902,
       IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d963,
       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d639,
       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d762,
       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d823,
       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d884,
       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d945,
       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d654,
       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d776,
       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d837,
       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d898,
       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d959,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d661,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d783,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d844,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d905,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951,
       IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d966,
       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d641,
       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d764,
       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d825,
       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d886,
       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d947,
       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d656,
       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d778,
       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d839,
       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d900,
       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d961,
       NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d383,
       NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d427,
       NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d471,
       NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d515,
       NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d559,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d100,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d104,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d109,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d113,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d147,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d151,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d155,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d160,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d164,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d198,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d202,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d206,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d211,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d215,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d250,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d254,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d258,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d263,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d267,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d301,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d305,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d309,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d314,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d318,
       SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d96,
       fifo_out__h32300,
       fifo_out__h33315,
       fifo_out__h33655,
       fifo_out__h33995,
       fifo_out__h34335;

  // actionvalue method in_ports_0_getNonFullVCs
  assign in_ports_0_getNonFullVCs = flitBuffers_0$notFull ;

  // actionvalue method in_ports_1_getNonFullVCs
  assign in_ports_1_getNonFullVCs = flitBuffers_1$notFull ;

  // actionvalue method in_ports_2_getNonFullVCs
  assign in_ports_2_getNonFullVCs = flitBuffers_2$notFull ;

  // actionvalue method in_ports_3_getNonFullVCs
  assign in_ports_3_getNonFullVCs = flitBuffers_3$notFull ;

  // actionvalue method in_ports_4_getNonFullVCs
  assign in_ports_4_getNonFullVCs = flitBuffers_4$notFull ;

  // actionvalue method out_ports_0_getFlit
  assign out_ports_0_getFlit =
	     { IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	       SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744,
	       active_vc__h41727,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751 } ;

  // actionvalue method out_ports_1_getFlit
  assign out_ports_1_getFlit =
	     { IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	       SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811,
	       active_vc__h43952,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812 } ;

  // actionvalue method out_ports_2_getFlit
  assign out_ports_2_getFlit =
	     { IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	       SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872,
	       active_vc__h46177,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873 } ;

  // actionvalue method out_ports_3_getFlit
  assign out_ports_3_getFlit =
	     { IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	       SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933,
	       active_vc__h48402,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934 } ;

  // actionvalue method out_ports_4_getFlit
  assign out_ports_4_getFlit =
	     { IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	       SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994,
	       active_vc__h50627,
	       SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995 } ;

  // submodule flitBuffers_0
  mkInputVCQueues flitBuffers_0(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_0$deq_fifo_out),
				.enq_data_in(flitBuffers_0$enq_data_in),
				.enq_fifo_in(flitBuffers_0$enq_fifo_in),
				.EN_enq(flitBuffers_0$EN_enq),
				.EN_deq(flitBuffers_0$EN_deq),
				.deq(flitBuffers_0$deq),
				.notEmpty(flitBuffers_0$notEmpty),
				.notFull(flitBuffers_0$notFull));

  // submodule flitBuffers_1
  mkInputVCQueues flitBuffers_1(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_1$deq_fifo_out),
				.enq_data_in(flitBuffers_1$enq_data_in),
				.enq_fifo_in(flitBuffers_1$enq_fifo_in),
				.EN_enq(flitBuffers_1$EN_enq),
				.EN_deq(flitBuffers_1$EN_deq),
				.deq(flitBuffers_1$deq),
				.notEmpty(flitBuffers_1$notEmpty),
				.notFull(flitBuffers_1$notFull));

  // submodule flitBuffers_2
  mkInputVCQueues flitBuffers_2(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_2$deq_fifo_out),
				.enq_data_in(flitBuffers_2$enq_data_in),
				.enq_fifo_in(flitBuffers_2$enq_fifo_in),
				.EN_enq(flitBuffers_2$EN_enq),
				.EN_deq(flitBuffers_2$EN_deq),
				.deq(flitBuffers_2$deq),
				.notEmpty(flitBuffers_2$notEmpty),
				.notFull(flitBuffers_2$notFull));

  // submodule flitBuffers_3
  mkInputVCQueues flitBuffers_3(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_3$deq_fifo_out),
				.enq_data_in(flitBuffers_3$enq_data_in),
				.enq_fifo_in(flitBuffers_3$enq_fifo_in),
				.EN_enq(flitBuffers_3$EN_enq),
				.EN_deq(flitBuffers_3$EN_deq),
				.deq(flitBuffers_3$deq),
				.notEmpty(flitBuffers_3$notEmpty),
				.notFull(flitBuffers_3$notFull));

  // submodule flitBuffers_4
  mkInputVCQueues flitBuffers_4(.CLK(CLK),
				.RST_N(RST_N),
				.deq_fifo_out(flitBuffers_4$deq_fifo_out),
				.enq_data_in(flitBuffers_4$enq_data_in),
				.enq_fifo_in(flitBuffers_4$enq_fifo_in),
				.EN_enq(flitBuffers_4$EN_enq),
				.EN_deq(flitBuffers_4$EN_deq),
				.deq(flitBuffers_4$deq),
				.notEmpty(flitBuffers_4$notEmpty),
				.notFull(flitBuffers_4$notFull));

  // submodule outPortFIFOs_0_0
  mkOutPortFIFO outPortFIFOs_0_0(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_0_0$enq_sendData),
				 .EN_enq(outPortFIFOs_0_0$EN_enq),
				 .EN_deq(outPortFIFOs_0_0$EN_deq),
				 .EN_clear(outPortFIFOs_0_0$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_0_0$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_0_1
  mkOutPortFIFO outPortFIFOs_0_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_0_1$enq_sendData),
				 .EN_enq(outPortFIFOs_0_1$EN_enq),
				 .EN_deq(outPortFIFOs_0_1$EN_deq),
				 .EN_clear(outPortFIFOs_0_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_0_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_1_0
  mkOutPortFIFO outPortFIFOs_1_0(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_1_0$enq_sendData),
				 .EN_enq(outPortFIFOs_1_0$EN_enq),
				 .EN_deq(outPortFIFOs_1_0$EN_deq),
				 .EN_clear(outPortFIFOs_1_0$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_1_0$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_1_1
  mkOutPortFIFO outPortFIFOs_1_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_1_1$enq_sendData),
				 .EN_enq(outPortFIFOs_1_1$EN_enq),
				 .EN_deq(outPortFIFOs_1_1$EN_deq),
				 .EN_clear(outPortFIFOs_1_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_1_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_2_0
  mkOutPortFIFO outPortFIFOs_2_0(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_2_0$enq_sendData),
				 .EN_enq(outPortFIFOs_2_0$EN_enq),
				 .EN_deq(outPortFIFOs_2_0$EN_deq),
				 .EN_clear(outPortFIFOs_2_0$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_2_0$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_2_1
  mkOutPortFIFO outPortFIFOs_2_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_2_1$enq_sendData),
				 .EN_enq(outPortFIFOs_2_1$EN_enq),
				 .EN_deq(outPortFIFOs_2_1$EN_deq),
				 .EN_clear(outPortFIFOs_2_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_2_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_3_0
  mkOutPortFIFO outPortFIFOs_3_0(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_3_0$enq_sendData),
				 .EN_enq(outPortFIFOs_3_0$EN_enq),
				 .EN_deq(outPortFIFOs_3_0$EN_deq),
				 .EN_clear(outPortFIFOs_3_0$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_3_0$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_3_1
  mkOutPortFIFO outPortFIFOs_3_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_3_1$enq_sendData),
				 .EN_enq(outPortFIFOs_3_1$EN_enq),
				 .EN_deq(outPortFIFOs_3_1$EN_deq),
				 .EN_clear(outPortFIFOs_3_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_3_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_4_0
  mkOutPortFIFO outPortFIFOs_4_0(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_4_0$enq_sendData),
				 .EN_enq(outPortFIFOs_4_0$EN_enq),
				 .EN_deq(outPortFIFOs_4_0$EN_deq),
				 .EN_clear(outPortFIFOs_4_0$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_4_0$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule outPortFIFOs_4_1
  mkOutPortFIFO outPortFIFOs_4_1(.CLK(CLK),
				 .RST_N(RST_N),
				 .enq_sendData(outPortFIFOs_4_1$enq_sendData),
				 .EN_enq(outPortFIFOs_4_1$EN_enq),
				 .EN_deq(outPortFIFOs_4_1$EN_deq),
				 .EN_clear(outPortFIFOs_4_1$EN_clear),
				 .RDY_enq(),
				 .RDY_deq(),
				 .first(outPortFIFOs_4_1$first),
				 .RDY_first(),
				 .notFull(),
				 .RDY_notFull(),
				 .notEmpty(),
				 .RDY_notEmpty(),
				 .count(),
				 .RDY_count(),
				 .RDY_clear());

  // submodule routerAlloc
  mkSepRouterAllocator routerAlloc(.pipeline(1'd0),
				   .CLK(CLK),
				   .RST_N(RST_N),
				   .allocate_alloc_input(routerAlloc$allocate_alloc_input),
				   .EN_allocate(routerAlloc$EN_allocate),
				   .EN_next(routerAlloc$EN_next),
				   .allocate(routerAlloc$allocate));

  // inlined wires
  assign hasFlitsToSend_perIn_0$wget = { 1'd1, flitBuffers_0$deq } ;
  assign hasFlitsToSend_perIn_1$wget = { 1'd1, flitBuffers_1$deq } ;
  assign hasFlitsToSend_perIn_2$wget = { 1'd1, flitBuffers_2$deq } ;
  assign hasFlitsToSend_perIn_3$wget = { 1'd1, flitBuffers_3$deq } ;
  assign hasFlitsToSend_perIn_4$wget = { 1'd1, flitBuffers_4$deq } ;

  // register activeVC_perIn_reg_0
  assign activeVC_perIn_reg_0$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_0$EN = 1'b0 ;

  // register activeVC_perIn_reg_1
  assign activeVC_perIn_reg_1$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_1$EN = 1'b0 ;

  // register activeVC_perIn_reg_2
  assign activeVC_perIn_reg_2$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_2$EN = 1'b0 ;

  // register activeVC_perIn_reg_3
  assign activeVC_perIn_reg_3$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_3$EN = 1'b0 ;

  // register activeVC_perIn_reg_4
  assign activeVC_perIn_reg_4$D_IN = 2'h0 ;
  assign activeVC_perIn_reg_4$EN = 1'b0 ;

  // register inPortVL_0_0
  assign inPortVL_0_0$D_IN = active_in__h40944 ;
  assign inPortVL_0_0$EN =
	     EN_out_ports_0_getFlit && active_vc__h41727 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 ;

  // register inPortVL_0_1
  assign inPortVL_0_1$D_IN = active_in__h40944 ;
  assign inPortVL_0_1$EN =
	     EN_out_ports_0_getFlit && active_vc__h41727 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 ;

  // register inPortVL_1_0
  assign inPortVL_1_0$D_IN = active_in__h43333 ;
  assign inPortVL_1_0$EN =
	     EN_out_ports_1_getFlit && active_vc__h43952 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 ;

  // register inPortVL_1_1
  assign inPortVL_1_1$D_IN = active_in__h43333 ;
  assign inPortVL_1_1$EN =
	     EN_out_ports_1_getFlit && active_vc__h43952 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 ;

  // register inPortVL_2_0
  assign inPortVL_2_0$D_IN = active_in__h45558 ;
  assign inPortVL_2_0$EN =
	     EN_out_ports_2_getFlit && active_vc__h46177 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 ;

  // register inPortVL_2_1
  assign inPortVL_2_1$D_IN = active_in__h45558 ;
  assign inPortVL_2_1$EN =
	     EN_out_ports_2_getFlit && active_vc__h46177 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 ;

  // register inPortVL_3_0
  assign inPortVL_3_0$D_IN = active_in__h47783 ;
  assign inPortVL_3_0$EN =
	     EN_out_ports_3_getFlit && active_vc__h48402 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 ;

  // register inPortVL_3_1
  assign inPortVL_3_1$D_IN = active_in__h47783 ;
  assign inPortVL_3_1$EN =
	     EN_out_ports_3_getFlit && active_vc__h48402 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 ;

  // register inPortVL_4_0
  assign inPortVL_4_0$D_IN = active_in__h50008 ;
  assign inPortVL_4_0$EN =
	     EN_out_ports_4_getFlit && active_vc__h50627 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 ;

  // register inPortVL_4_1
  assign inPortVL_4_1$D_IN = active_in__h50008 ;
  assign inPortVL_4_1$EN =
	     EN_out_ports_4_getFlit && active_vc__h50627 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 ;

  // register lockedVL_0_0
  assign lockedVL_0_0$D_IN =
	     active_vc__h41727 != 1'd0 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 ;
  assign lockedVL_0_0$EN =
	     EN_out_ports_0_getFlit && active_vc__h41727 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 ;

  // register lockedVL_0_1
  assign lockedVL_0_1$D_IN =
	     active_vc__h41727 != 1'd1 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 ;
  assign lockedVL_0_1$EN =
	     EN_out_ports_0_getFlit && active_vc__h41727 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 ;

  // register lockedVL_1_0
  assign lockedVL_1_0$D_IN =
	     active_vc__h43952 != 1'd0 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 ;
  assign lockedVL_1_0$EN =
	     EN_out_ports_1_getFlit && active_vc__h43952 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 ;

  // register lockedVL_1_1
  assign lockedVL_1_1$D_IN =
	     active_vc__h43952 != 1'd1 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 ;
  assign lockedVL_1_1$EN =
	     EN_out_ports_1_getFlit && active_vc__h43952 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 ;

  // register lockedVL_2_0
  assign lockedVL_2_0$D_IN =
	     active_vc__h46177 != 1'd0 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 ;
  assign lockedVL_2_0$EN =
	     EN_out_ports_2_getFlit && active_vc__h46177 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 ;

  // register lockedVL_2_1
  assign lockedVL_2_1$D_IN =
	     active_vc__h46177 != 1'd1 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 ;
  assign lockedVL_2_1$EN =
	     EN_out_ports_2_getFlit && active_vc__h46177 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 ;

  // register lockedVL_3_0
  assign lockedVL_3_0$D_IN =
	     active_vc__h48402 != 1'd0 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 ;
  assign lockedVL_3_0$EN =
	     EN_out_ports_3_getFlit && active_vc__h48402 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 ;

  // register lockedVL_3_1
  assign lockedVL_3_1$D_IN =
	     active_vc__h48402 != 1'd1 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 ;
  assign lockedVL_3_1$EN =
	     EN_out_ports_3_getFlit && active_vc__h48402 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 ;

  // register lockedVL_4_0
  assign lockedVL_4_0$D_IN =
	     active_vc__h50627 != 1'd0 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 ;
  assign lockedVL_4_0$EN =
	     EN_out_ports_4_getFlit && active_vc__h50627 == 1'd0 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 ;

  // register lockedVL_4_1
  assign lockedVL_4_1$D_IN =
	     active_vc__h50627 != 1'd1 ||
	     !IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 ||
	     !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 ;
  assign lockedVL_4_1$EN =
	     EN_out_ports_4_getFlit && active_vc__h50627 == 1'd1 &&
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 ;

  // register selectedIO_reg_0_0
  assign selectedIO_reg_0_0$D_IN = 1'b0 ;
  assign selectedIO_reg_0_0$EN = 1'b0 ;

  // register selectedIO_reg_0_1
  assign selectedIO_reg_0_1$D_IN = 1'b0 ;
  assign selectedIO_reg_0_1$EN = 1'b0 ;

  // register selectedIO_reg_0_2
  assign selectedIO_reg_0_2$D_IN = 1'b0 ;
  assign selectedIO_reg_0_2$EN = 1'b0 ;

  // register selectedIO_reg_0_3
  assign selectedIO_reg_0_3$D_IN = 1'b0 ;
  assign selectedIO_reg_0_3$EN = 1'b0 ;

  // register selectedIO_reg_0_4
  assign selectedIO_reg_0_4$D_IN = 1'b0 ;
  assign selectedIO_reg_0_4$EN = 1'b0 ;

  // register selectedIO_reg_1_0
  assign selectedIO_reg_1_0$D_IN = 1'b0 ;
  assign selectedIO_reg_1_0$EN = 1'b0 ;

  // register selectedIO_reg_1_1
  assign selectedIO_reg_1_1$D_IN = 1'b0 ;
  assign selectedIO_reg_1_1$EN = 1'b0 ;

  // register selectedIO_reg_1_2
  assign selectedIO_reg_1_2$D_IN = 1'b0 ;
  assign selectedIO_reg_1_2$EN = 1'b0 ;

  // register selectedIO_reg_1_3
  assign selectedIO_reg_1_3$D_IN = 1'b0 ;
  assign selectedIO_reg_1_3$EN = 1'b0 ;

  // register selectedIO_reg_1_4
  assign selectedIO_reg_1_4$D_IN = 1'b0 ;
  assign selectedIO_reg_1_4$EN = 1'b0 ;

  // register selectedIO_reg_2_0
  assign selectedIO_reg_2_0$D_IN = 1'b0 ;
  assign selectedIO_reg_2_0$EN = 1'b0 ;

  // register selectedIO_reg_2_1
  assign selectedIO_reg_2_1$D_IN = 1'b0 ;
  assign selectedIO_reg_2_1$EN = 1'b0 ;

  // register selectedIO_reg_2_2
  assign selectedIO_reg_2_2$D_IN = 1'b0 ;
  assign selectedIO_reg_2_2$EN = 1'b0 ;

  // register selectedIO_reg_2_3
  assign selectedIO_reg_2_3$D_IN = 1'b0 ;
  assign selectedIO_reg_2_3$EN = 1'b0 ;

  // register selectedIO_reg_2_4
  assign selectedIO_reg_2_4$D_IN = 1'b0 ;
  assign selectedIO_reg_2_4$EN = 1'b0 ;

  // register selectedIO_reg_3_0
  assign selectedIO_reg_3_0$D_IN = 1'b0 ;
  assign selectedIO_reg_3_0$EN = 1'b0 ;

  // register selectedIO_reg_3_1
  assign selectedIO_reg_3_1$D_IN = 1'b0 ;
  assign selectedIO_reg_3_1$EN = 1'b0 ;

  // register selectedIO_reg_3_2
  assign selectedIO_reg_3_2$D_IN = 1'b0 ;
  assign selectedIO_reg_3_2$EN = 1'b0 ;

  // register selectedIO_reg_3_3
  assign selectedIO_reg_3_3$D_IN = 1'b0 ;
  assign selectedIO_reg_3_3$EN = 1'b0 ;

  // register selectedIO_reg_3_4
  assign selectedIO_reg_3_4$D_IN = 1'b0 ;
  assign selectedIO_reg_3_4$EN = 1'b0 ;

  // register selectedIO_reg_4_0
  assign selectedIO_reg_4_0$D_IN = 1'b0 ;
  assign selectedIO_reg_4_0$EN = 1'b0 ;

  // register selectedIO_reg_4_1
  assign selectedIO_reg_4_1$D_IN = 1'b0 ;
  assign selectedIO_reg_4_1$EN = 1'b0 ;

  // register selectedIO_reg_4_2
  assign selectedIO_reg_4_2$D_IN = 1'b0 ;
  assign selectedIO_reg_4_2$EN = 1'b0 ;

  // register selectedIO_reg_4_3
  assign selectedIO_reg_4_3$D_IN = 1'b0 ;
  assign selectedIO_reg_4_3$EN = 1'b0 ;

  // register selectedIO_reg_4_4
  assign selectedIO_reg_4_4$D_IN = 1'b0 ;
  assign selectedIO_reg_4_4$EN = 1'b0 ;

  // submodule flitBuffers_0
  assign flitBuffers_0$deq_fifo_out = fifo_out__h32300 ;
  assign flitBuffers_0$enq_data_in = in_ports_0_putRoutedFlit_flit_in[264:3] ;
  assign flitBuffers_0$enq_fifo_in = in_ports_0_putRoutedFlit_flit_in[259] ;
  assign flitBuffers_0$EN_enq =
	     EN_in_ports_0_putRoutedFlit &&
	     in_ports_0_putRoutedFlit_flit_in[265] ;
  assign flitBuffers_0$EN_deq = outport_encoder___d369[3] ;

  // submodule flitBuffers_1
  assign flitBuffers_1$deq_fifo_out = fifo_out__h33315 ;
  assign flitBuffers_1$enq_data_in = in_ports_1_putRoutedFlit_flit_in[264:3] ;
  assign flitBuffers_1$enq_fifo_in = in_ports_1_putRoutedFlit_flit_in[259] ;
  assign flitBuffers_1$EN_enq =
	     EN_in_ports_1_putRoutedFlit &&
	     in_ports_1_putRoutedFlit_flit_in[265] ;
  assign flitBuffers_1$EN_deq = outport_encoder___d413[3] ;

  // submodule flitBuffers_2
  assign flitBuffers_2$deq_fifo_out = fifo_out__h33655 ;
  assign flitBuffers_2$enq_data_in = in_ports_2_putRoutedFlit_flit_in[264:3] ;
  assign flitBuffers_2$enq_fifo_in = in_ports_2_putRoutedFlit_flit_in[259] ;
  assign flitBuffers_2$EN_enq =
	     EN_in_ports_2_putRoutedFlit &&
	     in_ports_2_putRoutedFlit_flit_in[265] ;
  assign flitBuffers_2$EN_deq = outport_encoder___d457[3] ;

  // submodule flitBuffers_3
  assign flitBuffers_3$deq_fifo_out = fifo_out__h33995 ;
  assign flitBuffers_3$enq_data_in = in_ports_3_putRoutedFlit_flit_in[264:3] ;
  assign flitBuffers_3$enq_fifo_in = in_ports_3_putRoutedFlit_flit_in[259] ;
  assign flitBuffers_3$EN_enq =
	     EN_in_ports_3_putRoutedFlit &&
	     in_ports_3_putRoutedFlit_flit_in[265] ;
  assign flitBuffers_3$EN_deq = outport_encoder___d501[3] ;

  // submodule flitBuffers_4
  assign flitBuffers_4$deq_fifo_out = fifo_out__h34335 ;
  assign flitBuffers_4$enq_data_in = in_ports_4_putRoutedFlit_flit_in[264:3] ;
  assign flitBuffers_4$enq_fifo_in = in_ports_4_putRoutedFlit_flit_in[259] ;
  assign flitBuffers_4$EN_enq =
	     EN_in_ports_4_putRoutedFlit &&
	     in_ports_4_putRoutedFlit_flit_in[265] ;
  assign flitBuffers_4$EN_deq = outport_encoder___d545[3] ;

  // submodule outPortFIFOs_0_0
  assign outPortFIFOs_0_0$enq_sendData =
	     in_ports_0_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_0_0$EN_enq =
	     EN_in_ports_0_putRoutedFlit &&
	     in_ports_0_putRoutedFlit_flit_in[259] == 1'd0 &&
	     in_ports_0_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_0_0$EN_deq =
	     fifo_out__h32300 == 1'd0 && outport_encoder___d369[3] ;
  assign outPortFIFOs_0_0$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_0_1
  assign outPortFIFOs_0_1$enq_sendData =
	     in_ports_0_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_0_1$EN_enq =
	     EN_in_ports_0_putRoutedFlit &&
	     in_ports_0_putRoutedFlit_flit_in[259] == 1'd1 &&
	     in_ports_0_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_0_1$EN_deq =
	     fifo_out__h32300 == 1'd1 && outport_encoder___d369[3] ;
  assign outPortFIFOs_0_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_1_0
  assign outPortFIFOs_1_0$enq_sendData =
	     in_ports_1_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_1_0$EN_enq =
	     EN_in_ports_1_putRoutedFlit &&
	     in_ports_1_putRoutedFlit_flit_in[259] == 1'd0 &&
	     in_ports_1_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_1_0$EN_deq =
	     fifo_out__h33315 == 1'd0 && outport_encoder___d413[3] ;
  assign outPortFIFOs_1_0$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_1_1
  assign outPortFIFOs_1_1$enq_sendData =
	     in_ports_1_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_1_1$EN_enq =
	     EN_in_ports_1_putRoutedFlit &&
	     in_ports_1_putRoutedFlit_flit_in[259] == 1'd1 &&
	     in_ports_1_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_1_1$EN_deq =
	     fifo_out__h33315 == 1'd1 && outport_encoder___d413[3] ;
  assign outPortFIFOs_1_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_2_0
  assign outPortFIFOs_2_0$enq_sendData =
	     in_ports_2_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_2_0$EN_enq =
	     EN_in_ports_2_putRoutedFlit &&
	     in_ports_2_putRoutedFlit_flit_in[259] == 1'd0 &&
	     in_ports_2_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_2_0$EN_deq =
	     fifo_out__h33655 == 1'd0 && outport_encoder___d457[3] ;
  assign outPortFIFOs_2_0$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_2_1
  assign outPortFIFOs_2_1$enq_sendData =
	     in_ports_2_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_2_1$EN_enq =
	     EN_in_ports_2_putRoutedFlit &&
	     in_ports_2_putRoutedFlit_flit_in[259] == 1'd1 &&
	     in_ports_2_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_2_1$EN_deq =
	     fifo_out__h33655 == 1'd1 && outport_encoder___d457[3] ;
  assign outPortFIFOs_2_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_3_0
  assign outPortFIFOs_3_0$enq_sendData =
	     in_ports_3_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_3_0$EN_enq =
	     EN_in_ports_3_putRoutedFlit &&
	     in_ports_3_putRoutedFlit_flit_in[259] == 1'd0 &&
	     in_ports_3_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_3_0$EN_deq =
	     fifo_out__h33995 == 1'd0 && outport_encoder___d501[3] ;
  assign outPortFIFOs_3_0$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_3_1
  assign outPortFIFOs_3_1$enq_sendData =
	     in_ports_3_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_3_1$EN_enq =
	     EN_in_ports_3_putRoutedFlit &&
	     in_ports_3_putRoutedFlit_flit_in[259] == 1'd1 &&
	     in_ports_3_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_3_1$EN_deq =
	     fifo_out__h33995 == 1'd1 && outport_encoder___d501[3] ;
  assign outPortFIFOs_3_1$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_4_0
  assign outPortFIFOs_4_0$enq_sendData =
	     in_ports_4_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_4_0$EN_enq =
	     EN_in_ports_4_putRoutedFlit &&
	     in_ports_4_putRoutedFlit_flit_in[259] == 1'd0 &&
	     in_ports_4_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_4_0$EN_deq =
	     fifo_out__h34335 == 1'd0 && outport_encoder___d545[3] ;
  assign outPortFIFOs_4_0$EN_clear = 1'b0 ;

  // submodule outPortFIFOs_4_1
  assign outPortFIFOs_4_1$enq_sendData =
	     in_ports_4_putRoutedFlit_flit_in[2:0] ;
  assign outPortFIFOs_4_1$EN_enq =
	     EN_in_ports_4_putRoutedFlit &&
	     in_ports_4_putRoutedFlit_flit_in[259] == 1'd1 &&
	     in_ports_4_putRoutedFlit_flit_in[265] ;
  assign outPortFIFOs_4_1$EN_deq =
	     fifo_out__h34335 == 1'd1 && outport_encoder___d545[3] ;
  assign outPortFIFOs_4_1$EN_clear = 1'b0 ;

  // submodule routerAlloc
  assign routerAlloc$allocate_alloc_input =
	     { IF_flitBuffers_4_notEmpty_BIT_0_THEN_IF_SEL_AR_ETC___d119,
	       IF_flitBuffers_3_notEmpty__20_BIT_0_21_THEN_IF_ETC___d170,
	       IF_flitBuffers_2_notEmpty__71_BIT_0_72_THEN_IF_ETC___d221,
	       IF_flitBuffers_1_notEmpty__23_BIT_0_24_THEN_IF_ETC___d273,
	       IF_flitBuffers_0_notEmpty__74_BIT_0_75_THEN_IF_ETC___d324 } ;
  assign routerAlloc$EN_allocate = 1'd1 ;
  assign routerAlloc$EN_next = 1'd1 ;

  // remaining internal signals
  module_outport_encoder instance_outport_encoder_1(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[4],
									     1'd1 &&
									     routerAlloc$allocate[3],
									     1'd1 &&
									     routerAlloc$allocate[2] },
									   1'd1 &&
									   routerAlloc$allocate[1],
									   1'd1 &&
									   routerAlloc$allocate[0] }),
						    .outport_encoder(outport_encoder___d369));
  module_outport_encoder instance_outport_encoder_0(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[9],
									     1'd1 &&
									     routerAlloc$allocate[8],
									     1'd1 &&
									     routerAlloc$allocate[7] },
									   1'd1 &&
									   routerAlloc$allocate[6],
									   1'd1 &&
									   routerAlloc$allocate[5] }),
						    .outport_encoder(outport_encoder___d413));
  module_outport_encoder instance_outport_encoder_2(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[14],
									     1'd1 &&
									     routerAlloc$allocate[13],
									     1'd1 &&
									     routerAlloc$allocate[12] },
									   1'd1 &&
									   routerAlloc$allocate[11],
									   1'd1 &&
									   routerAlloc$allocate[10] }),
						    .outport_encoder(outport_encoder___d457));
  module_outport_encoder instance_outport_encoder_3(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[19],
									     1'd1 &&
									     routerAlloc$allocate[18],
									     1'd1 &&
									     routerAlloc$allocate[17] },
									   1'd1 &&
									   routerAlloc$allocate[16],
									   1'd1 &&
									   routerAlloc$allocate[15] }),
						    .outport_encoder(outport_encoder___d501));
  module_outport_encoder instance_outport_encoder_4(.outport_encoder_vec({ { 1'd1 &&
									     routerAlloc$allocate[24],
									     1'd1 &&
									     routerAlloc$allocate[23],
									     1'd1 &&
									     routerAlloc$allocate[22] },
									   1'd1 &&
									   routerAlloc$allocate[21],
									   1'd1 &&
									   routerAlloc$allocate[20] }),
						    .outport_encoder(outport_encoder___d545));
  assign IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d117 =
	     (SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 ||
	      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 &&
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 ==
	      3'd4) ?
	       { outPortFIFOs_4_0$first == 3'd4,
		 outPortFIFOs_4_0$first == 3'd3,
		 outPortFIFOs_4_0$first == 3'd2,
		 outPortFIFOs_4_0$first == 3'd1,
		 outPortFIFOs_4_0$first == 3'd0 } :
	       { flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d96,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d100,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d104,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d109,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d113 } ;
  assign IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d168 =
	     (SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 ||
	      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 &&
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 ==
	      3'd3) ?
	       { outPortFIFOs_3_0$first == 3'd4,
		 outPortFIFOs_3_0$first == 3'd3,
		 outPortFIFOs_3_0$first == 3'd2,
		 outPortFIFOs_3_0$first == 3'd1,
		 outPortFIFOs_3_0$first == 3'd0 } :
	       { flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d147,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d151,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d155,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d160,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d164 } ;
  assign IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d219 =
	     (SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 ||
	      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 &&
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 ==
	      3'd2) ?
	       { outPortFIFOs_2_0$first == 3'd4,
		 outPortFIFOs_2_0$first == 3'd3,
		 outPortFIFOs_2_0$first == 3'd2,
		 outPortFIFOs_2_0$first == 3'd1,
		 outPortFIFOs_2_0$first == 3'd0 } :
	       { flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d198,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d202,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d206,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d211,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d215 } ;
  assign IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d271 =
	     (SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 ||
	      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 &&
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 ==
	      3'd1) ?
	       { outPortFIFOs_1_0$first == 3'd4,
		 outPortFIFOs_1_0$first == 3'd3,
		 outPortFIFOs_1_0$first == 3'd2,
		 outPortFIFOs_1_0$first == 3'd1,
		 outPortFIFOs_1_0$first == 3'd0 } :
	       { flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d250,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d254,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d258,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d263,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d267 } ;
  assign IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d322 =
	     (SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 ||
	      SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 &&
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 ==
	      3'd0) ?
	       { outPortFIFOs_0_0$first == 3'd4,
		 outPortFIFOs_0_0$first == 3'd3,
		 outPortFIFOs_0_0$first == 3'd2,
		 outPortFIFOs_0_0$first == 3'd1,
		 outPortFIFOs_0_0$first == 3'd0 } :
	       { flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d301,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d305,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d309,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d314,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d318 } ;
  assign IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d118 =
	     SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 ?
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d117 :
	       { flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d96,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d100,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d104,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d109,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d113 } ;
  assign IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d169 =
	     SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 ?
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d168 :
	       { flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d147,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d151,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d155,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d160,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d164 } ;
  assign IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d220 =
	     SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 ?
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d219 :
	       { flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d198,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d202,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d206,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d211,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d215 } ;
  assign IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d272 =
	     SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 ?
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d271 :
	       { flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d250,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d254,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d258,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d263,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d267 } ;
  assign IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d323 =
	     SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 ?
	       IF_SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lock_ETC___d322 :
	       { flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d301,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d305,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d309,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d314,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d318 } ;
  assign IF_flitBuffers_0_notEmpty__74_BIT_0_75_THEN_IF_ETC___d324 =
	     flitBuffers_0$notEmpty[0] ?
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d323 :
	       { flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d301,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d305,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d309,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d314,
		 flitBuffers_0$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d318 } ;
  assign IF_flitBuffers_1_notEmpty__23_BIT_0_24_THEN_IF_ETC___d273 =
	     flitBuffers_1$notEmpty[0] ?
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d272 :
	       { flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d250,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d254,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d258,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d263,
		 flitBuffers_1$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d267 } ;
  assign IF_flitBuffers_2_notEmpty__71_BIT_0_72_THEN_IF_ETC___d221 =
	     flitBuffers_2$notEmpty[0] ?
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d220 :
	       { flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d198,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d202,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d206,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d211,
		 flitBuffers_2$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d215 } ;
  assign IF_flitBuffers_3_notEmpty__20_BIT_0_21_THEN_IF_ETC___d170 =
	     flitBuffers_3$notEmpty[0] ?
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d169 :
	       { flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d147,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d151,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d155,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d160,
		 flitBuffers_3$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d164 } ;
  assign IF_flitBuffers_4_notEmpty_BIT_0_THEN_IF_SEL_AR_ETC___d119 =
	     flitBuffers_4$notEmpty[0] ?
	       IF_SEL_ARR_simple_credits_0_0_whas_AND_simple__ETC___d118 :
	       { flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d96,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d100,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d104,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d109,
		 flitBuffers_4$notEmpty[1] &&
		 SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 &&
		 SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d113 } ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d700 =
	     outport_encoder___d501[3] ?
	       ((outport_encoder___d501[2:0] == 3'd0) ?
		  3'd3 :
		  IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d698) :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d698 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d791 =
	     outport_encoder___d501[3] ?
	       ((outport_encoder___d501[2:0] == 3'd1) ?
		  3'd3 :
		  IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d789) :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d789 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d852 =
	     outport_encoder___d501[3] ?
	       ((outport_encoder___d501[2:0] == 3'd2) ?
		  3'd3 :
		  IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d850) :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d850 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d913 =
	     outport_encoder___d501[3] ?
	       ((outport_encoder___d501[2:0] == 3'd3) ?
		  outport_encoder___d501[2:0] :
		  IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d911) :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d911 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d974 =
	     outport_encoder___d501[3] ?
	       ((outport_encoder___d501[2:0] == 3'd4) ?
		  3'd3 :
		  IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d972) :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d972 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d643 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] == 3'd0 ||
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d641 :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d641 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d766 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] == 3'd1 ||
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d764 :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d764 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d827 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] == 3'd2 ||
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d825 :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d825 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d888 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] == 3'd3 ||
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d886 :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d886 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d949 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] == 3'd4 ||
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d947 :
	       IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d947 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d658 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] != 3'd0 &&
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d656 :
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d656 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d780 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] != 3'd1 &&
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d778 :
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d778 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d841 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] != 3'd2 &&
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d839 :
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d839 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d902 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] != 3'd3 &&
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d900 :
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d900 ;
  assign IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d963 =
	     outport_encoder___d501[3] ?
	       outport_encoder___d501[2:0] != 3'd4 &&
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d961 :
	       IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d961 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d696 =
	     outport_encoder___d413[3] ?
	       ((outport_encoder___d413[2:0] == 3'd0) ?
		  3'd1 :
		  outport_encoder___d369[2:0]) :
	       outport_encoder___d369[2:0] ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d787 =
	     outport_encoder___d413[3] ?
	       ((outport_encoder___d413[2:0] == 3'd1) ?
		  outport_encoder___d413[2:0] :
		  3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d848 =
	     outport_encoder___d413[3] ?
	       ((outport_encoder___d413[2:0] == 3'd2) ? 3'd1 : 3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d909 =
	     outport_encoder___d413[3] ?
	       ((outport_encoder___d413[2:0] == 3'd3) ? 3'd1 : 3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d970 =
	     outport_encoder___d413[3] ?
	       ((outport_encoder___d413[2:0] == 3'd4) ? 3'd1 : 3'd0) :
	       3'd0 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d639 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] == 3'd0 ||
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd0 :
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd0 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d762 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] == 3'd1 ||
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd1 :
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd1 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d823 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] == 3'd2 ||
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd2 :
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd2 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d884 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] == 3'd3 ||
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd3 :
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd3 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d945 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] == 3'd4 ||
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd4 :
	       outport_encoder___d369[3] &&
	       outport_encoder___d369[2:0] == 3'd4 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d654 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] != 3'd0 &&
	       (!outport_encoder___d369[3] ||
		outport_encoder___d369[2:0] != 3'd0) :
	       !outport_encoder___d369[3] ||
	       outport_encoder___d369[2:0] != 3'd0 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d776 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] != 3'd1 &&
	       (!outport_encoder___d369[3] ||
		outport_encoder___d369[2:0] != 3'd1) :
	       !outport_encoder___d369[3] ||
	       outport_encoder___d369[2:0] != 3'd1 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d837 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] != 3'd2 &&
	       (!outport_encoder___d369[3] ||
		outport_encoder___d369[2:0] != 3'd2) :
	       !outport_encoder___d369[3] ||
	       outport_encoder___d369[2:0] != 3'd2 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d898 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] != 3'd3 &&
	       (!outport_encoder___d369[3] ||
		outport_encoder___d369[2:0] != 3'd3) :
	       !outport_encoder___d369[3] ||
	       outport_encoder___d369[2:0] != 3'd3 ;
  assign IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d959 =
	     outport_encoder___d413[3] ?
	       outport_encoder___d413[2:0] != 3'd4 &&
	       (!outport_encoder___d369[3] ||
		outport_encoder___d369[2:0] != 3'd4) :
	       !outport_encoder___d369[3] ||
	       outport_encoder___d369[2:0] != 3'd4 ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 =
	     outport_encoder___d545[3] ?
	       outport_encoder___d545[2:0] == 3'd0 ||
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d643 :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d643 ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d661 =
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	     (outport_encoder___d545[3] ?
		outport_encoder___d545[2:0] != 3'd0 &&
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d658 :
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d658) ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 =
	     outport_encoder___d545[3] ?
	       outport_encoder___d545[2:0] == 3'd1 ||
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d766 :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d766 ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d783 =
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	     (outport_encoder___d545[3] ?
		outport_encoder___d545[2:0] != 3'd1 &&
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d780 :
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d780) ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 =
	     outport_encoder___d545[3] ?
	       outport_encoder___d545[2:0] == 3'd2 ||
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d827 :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d827 ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d844 =
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	     (outport_encoder___d545[3] ?
		outport_encoder___d545[2:0] != 3'd2 &&
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d841 :
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d841) ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 =
	     outport_encoder___d545[3] ?
	       outport_encoder___d545[2:0] == 3'd3 ||
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d888 :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d888 ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d905 =
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	     (outport_encoder___d545[3] ?
		outport_encoder___d545[2:0] != 3'd3 &&
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d902 :
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d902) ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 =
	     outport_encoder___d545[3] ?
	       outport_encoder___d545[2:0] == 3'd4 ||
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d949 :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_outport_ETC___d949 ;
  assign IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d966 =
	     IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	     (outport_encoder___d545[3] ?
		outport_encoder___d545[2:0] != 3'd4 &&
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d963 :
		IF_outport_encoder_01_BIT_3_02_THEN_NOT_IF_out_ETC___d963) ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d698 =
	     outport_encoder___d457[3] ?
	       ((outport_encoder___d457[2:0] == 3'd0) ?
		  3'd2 :
		  IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d696) :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d696 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d789 =
	     outport_encoder___d457[3] ?
	       ((outport_encoder___d457[2:0] == 3'd1) ?
		  3'd2 :
		  IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d787) :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d787 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d850 =
	     outport_encoder___d457[3] ?
	       ((outport_encoder___d457[2:0] == 3'd2) ?
		  outport_encoder___d457[2:0] :
		  IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d848) :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d848 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d911 =
	     outport_encoder___d457[3] ?
	       ((outport_encoder___d457[2:0] == 3'd3) ?
		  3'd2 :
		  IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d909) :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d909 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_IF_outp_ETC___d972 =
	     outport_encoder___d457[3] ?
	       ((outport_encoder___d457[2:0] == 3'd4) ?
		  3'd2 :
		  IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d970) :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_IF_outp_ETC___d970 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d641 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] == 3'd0 ||
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d639 :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d639 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d764 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] == 3'd1 ||
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d762 :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d762 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d825 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] == 3'd2 ||
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d823 :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d823 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d886 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] == 3'd3 ||
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d884 :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d884 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_IF_outport_ETC___d947 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] == 3'd4 ||
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d945 :
	       IF_outport_encoder_13_BIT_3_14_THEN_IF_outport_ETC___d945 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d656 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] != 3'd0 &&
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d654 :
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d654 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d778 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] != 3'd1 &&
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d776 :
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d776 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d839 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] != 3'd2 &&
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d837 :
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d837 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d900 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] != 3'd3 &&
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d898 :
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d898 ;
  assign IF_outport_encoder_57_BIT_3_58_THEN_NOT_IF_out_ETC___d961 =
	     outport_encoder___d457[3] ?
	       outport_encoder___d457[2:0] != 3'd4 &&
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d959 :
	       IF_outport_encoder_13_BIT_3_14_THEN_NOT_IF_out_ETC___d959 ;
  assign NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d383 =
	     !SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 ||
	     !SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 &&
	     (!SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 ||
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 !=
	      3'd0) ;
  assign NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d427 =
	     !SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 ||
	     !SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 &&
	     (!SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 ||
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 !=
	      3'd1) ;
  assign NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d471 =
	     !SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 ||
	     !SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 &&
	     (!SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 ||
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 !=
	      3'd2) ;
  assign NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d515 =
	     !SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 ||
	     !SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 &&
	     (!SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 ||
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 !=
	      3'd3) ;
  assign NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d559 =
	     !SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 ||
	     !SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 &&
	     (!SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 ||
	      SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 !=
	      3'd4) ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d100 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 ==
	      3'd4) &&
	     outPortFIFOs_4_1$first == 3'd3 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d104 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 ==
	      3'd4) &&
	     outPortFIFOs_4_1$first == 3'd2 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d109 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 ==
	      3'd4) &&
	     outPortFIFOs_4_1$first == 3'd1 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d113 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 ==
	      3'd4) &&
	     outPortFIFOs_4_1$first == 3'd0 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d147 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 ==
	      3'd3) &&
	     outPortFIFOs_3_1$first == 3'd4 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d151 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 ==
	      3'd3) &&
	     outPortFIFOs_3_1$first == 3'd3 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d155 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 ==
	      3'd3) &&
	     outPortFIFOs_3_1$first == 3'd2 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d160 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 ==
	      3'd3) &&
	     outPortFIFOs_3_1$first == 3'd1 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d164 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 ==
	      3'd3) &&
	     outPortFIFOs_3_1$first == 3'd0 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d198 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 ==
	      3'd2) &&
	     outPortFIFOs_2_1$first == 3'd4 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d202 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 ==
	      3'd2) &&
	     outPortFIFOs_2_1$first == 3'd3 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d206 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 ==
	      3'd2) &&
	     outPortFIFOs_2_1$first == 3'd2 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d211 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 ==
	      3'd2) &&
	     outPortFIFOs_2_1$first == 3'd1 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d215 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 ==
	      3'd2) &&
	     outPortFIFOs_2_1$first == 3'd0 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d250 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 ==
	      3'd1) &&
	     outPortFIFOs_1_1$first == 3'd4 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d254 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 ==
	      3'd1) &&
	     outPortFIFOs_1_1$first == 3'd3 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d258 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 ==
	      3'd1) &&
	     outPortFIFOs_1_1$first == 3'd2 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d263 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 ==
	      3'd1) &&
	     outPortFIFOs_1_1$first == 3'd1 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d267 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 ==
	      3'd1) &&
	     outPortFIFOs_1_1$first == 3'd0 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d301 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 ==
	      3'd0) &&
	     outPortFIFOs_0_1$first == 3'd4 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d305 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 ==
	      3'd0) &&
	     outPortFIFOs_0_1$first == 3'd3 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d309 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 ==
	      3'd0) &&
	     outPortFIFOs_0_1$first == 3'd2 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d314 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 ==
	      3'd0) &&
	     outPortFIFOs_0_1$first == 3'd1 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d318 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 ==
	      3'd0) &&
	     outPortFIFOs_0_1$first == 3'd0 ;
  assign SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d96 =
	     (SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 ||
	      SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 &&
	      SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 ==
	      3'd4) &&
	     outPortFIFOs_4_1$first == 3'd4 ;
  assign active_in__h40944 =
	     outport_encoder___d545[3] ?
	       ((outport_encoder___d545[2:0] == 3'd0) ?
		  3'd4 :
		  IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d700) :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d700 ;
  assign active_in__h43333 =
	     outport_encoder___d545[3] ?
	       ((outport_encoder___d545[2:0] == 3'd1) ?
		  3'd4 :
		  IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d791) :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d791 ;
  assign active_in__h45558 =
	     outport_encoder___d545[3] ?
	       ((outport_encoder___d545[2:0] == 3'd2) ?
		  3'd4 :
		  IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d852) :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d852 ;
  assign active_in__h47783 =
	     outport_encoder___d545[3] ?
	       ((outport_encoder___d545[2:0] == 3'd3) ?
		  3'd4 :
		  IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d913) :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d913 ;
  assign active_in__h50008 =
	     outport_encoder___d545[3] ?
	       ((outport_encoder___d545[2:0] == 3'd4) ?
		  outport_encoder___d545[2:0] :
		  IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d974) :
	       IF_outport_encoder_01_BIT_3_02_THEN_IF_IF_outp_ETC___d974 ;
  assign fifo_out__h32300 =
	     !flitBuffers_0$notEmpty[0] ||
	     NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d383 ;
  assign fifo_out__h33315 =
	     !flitBuffers_1$notEmpty[0] ||
	     NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d427 ;
  assign fifo_out__h33655 =
	     !flitBuffers_2$notEmpty[0] ||
	     NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d471 ;
  assign fifo_out__h33995 =
	     !flitBuffers_3$notEmpty[0] ||
	     NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d515 ;
  assign fifo_out__h34335 =
	     !flitBuffers_4$notEmpty[0] ||
	     NOT_SEL_ARR_simple_credits_0_0_whas_AND_simple_ETC___d559 ;
  always@(outPortFIFOs_4_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_4_0$first)
      3'd0:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 =
	      lockedVL_0_0;
      3'd1:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 =
	      lockedVL_1_0;
      3'd2:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 =
	      lockedVL_2_0;
      3'd3:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 =
	      lockedVL_3_0;
      3'd4:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 =
	      lockedVL_4_0;
      default: SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d34 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_4_0$first or
	  inPortVL_0_0 or
	  inPortVL_1_0 or inPortVL_2_0 or inPortVL_3_0 or inPortVL_4_0)
  begin
    case (outPortFIFOs_4_0$first)
      3'd0:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 =
	      inPortVL_0_0;
      3'd1:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 =
	      inPortVL_1_0;
      3'd2:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 =
	      inPortVL_2_0;
      3'd3:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 =
	      inPortVL_3_0;
      3'd4:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 =
	      inPortVL_4_0;
      default: SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d41 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_4_1$first or
	  inPortVL_0_1 or
	  inPortVL_1_1 or inPortVL_2_1 or inPortVL_3_1 or inPortVL_4_1)
  begin
    case (outPortFIFOs_4_1$first)
      3'd0:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 =
	      inPortVL_0_1;
      3'd1:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 =
	      inPortVL_1_1;
      3'd2:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 =
	      inPortVL_2_1;
      3'd3:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 =
	      inPortVL_3_1;
      3'd4:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 =
	      inPortVL_4_1;
      default: SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d91 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_4_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_4_1$first)
      3'd0:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 =
	      lockedVL_0_1;
      3'd1:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 =
	      lockedVL_1_1;
      3'd2:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 =
	      lockedVL_2_1;
      3'd3:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 =
	      lockedVL_3_1;
      3'd4:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 =
	      lockedVL_4_1;
      default: SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d84 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_4_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_4_1$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 =
	      !lockedVL_0_1;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 =
	      !lockedVL_1_1;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 =
	      !lockedVL_2_1;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 =
	      !lockedVL_3_1;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 =
	      !lockedVL_4_1;
      default: SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d82 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_4_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_4_0$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 =
	      !lockedVL_0_0;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 =
	      !lockedVL_1_0;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 =
	      !lockedVL_2_0;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 =
	      !lockedVL_3_0;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 =
	      !lockedVL_4_0;
      default: SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d32 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_4_1$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_4_1$first)
      3'd0:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[1];
      3'd1:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[1];
      3'd2:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[1];
      3'd3:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[1];
      3'd4:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[1];
      default: SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d70 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_4_0$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_4_0$first)
      3'd0:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[0];
      3'd1:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[0];
      3'd2:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[0];
      3'd3:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[0];
      3'd4:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[0];
      default: SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d20 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_0$first or
	  inPortVL_0_0 or
	  inPortVL_1_0 or inPortVL_2_0 or inPortVL_3_0 or inPortVL_4_0)
  begin
    case (outPortFIFOs_3_0$first)
      3'd0:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 =
	      inPortVL_0_0;
      3'd1:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 =
	      inPortVL_1_0;
      3'd2:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 =
	      inPortVL_2_0;
      3'd3:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 =
	      inPortVL_3_0;
      3'd4:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 =
	      inPortVL_4_0;
      default: SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d126 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_3_0$first)
      3'd0:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 =
	      lockedVL_0_0;
      3'd1:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 =
	      lockedVL_1_0;
      3'd2:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 =
	      lockedVL_2_0;
      3'd3:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 =
	      lockedVL_3_0;
      3'd4:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 =
	      lockedVL_4_0;
      default: SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d125 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_3_0$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 =
	      !lockedVL_0_0;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 =
	      !lockedVL_1_0;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 =
	      !lockedVL_2_0;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 =
	      !lockedVL_3_0;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 =
	      !lockedVL_4_0;
      default: SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d124 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_1$first or
	  inPortVL_0_1 or
	  inPortVL_1_1 or inPortVL_2_1 or inPortVL_3_1 or inPortVL_4_1)
  begin
    case (outPortFIFOs_3_1$first)
      3'd0:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 =
	      inPortVL_0_1;
      3'd1:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 =
	      inPortVL_1_1;
      3'd2:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 =
	      inPortVL_2_1;
      3'd3:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 =
	      inPortVL_3_1;
      3'd4:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 =
	      inPortVL_4_1;
      default: SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d142 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_3_1$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 =
	      !lockedVL_0_1;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 =
	      !lockedVL_1_1;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 =
	      !lockedVL_2_1;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 =
	      !lockedVL_3_1;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 =
	      !lockedVL_4_1;
      default: SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d140 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_3_1$first)
      3'd0:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 =
	      lockedVL_0_1;
      3'd1:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 =
	      lockedVL_1_1;
      3'd2:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 =
	      lockedVL_2_1;
      3'd3:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 =
	      lockedVL_3_1;
      3'd4:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 =
	      lockedVL_4_1;
      default: SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d141 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_1$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_3_1$first)
      3'd0:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[1];
      3'd1:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[1];
      3'd2:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[1];
      3'd3:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[1];
      3'd4:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[1];
      default: SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d139 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_3_0$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_3_0$first)
      3'd0:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[0];
      3'd1:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[0];
      3'd2:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[0];
      3'd3:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[0];
      3'd4:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[0];
      default: SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d123 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_0$first or
	  inPortVL_0_0 or
	  inPortVL_1_0 or inPortVL_2_0 or inPortVL_3_0 or inPortVL_4_0)
  begin
    case (outPortFIFOs_2_0$first)
      3'd0:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 =
	      inPortVL_0_0;
      3'd1:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 =
	      inPortVL_1_0;
      3'd2:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 =
	      inPortVL_2_0;
      3'd3:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 =
	      inPortVL_3_0;
      3'd4:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 =
	      inPortVL_4_0;
      default: SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d177 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_2_0$first)
      3'd0:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 =
	      lockedVL_0_0;
      3'd1:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 =
	      lockedVL_1_0;
      3'd2:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 =
	      lockedVL_2_0;
      3'd3:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 =
	      lockedVL_3_0;
      3'd4:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 =
	      lockedVL_4_0;
      default: SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d176 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_2_0$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 =
	      !lockedVL_0_0;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 =
	      !lockedVL_1_0;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 =
	      !lockedVL_2_0;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 =
	      !lockedVL_3_0;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 =
	      !lockedVL_4_0;
      default: SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d175 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_1$first or
	  inPortVL_0_1 or
	  inPortVL_1_1 or inPortVL_2_1 or inPortVL_3_1 or inPortVL_4_1)
  begin
    case (outPortFIFOs_2_1$first)
      3'd0:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 =
	      inPortVL_0_1;
      3'd1:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 =
	      inPortVL_1_1;
      3'd2:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 =
	      inPortVL_2_1;
      3'd3:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 =
	      inPortVL_3_1;
      3'd4:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 =
	      inPortVL_4_1;
      default: SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d193 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_2_1$first)
      3'd0:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 =
	      lockedVL_0_1;
      3'd1:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 =
	      lockedVL_1_1;
      3'd2:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 =
	      lockedVL_2_1;
      3'd3:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 =
	      lockedVL_3_1;
      3'd4:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 =
	      lockedVL_4_1;
      default: SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d192 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_1$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_2_1$first)
      3'd0:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[1];
      3'd1:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[1];
      3'd2:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[1];
      3'd3:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[1];
      3'd4:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[1];
      default: SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d190 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_2_1$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 =
	      !lockedVL_0_1;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 =
	      !lockedVL_1_1;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 =
	      !lockedVL_2_1;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 =
	      !lockedVL_3_1;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 =
	      !lockedVL_4_1;
      default: SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d191 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_2_0$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_2_0$first)
      3'd0:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[0];
      3'd1:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[0];
      3'd2:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[0];
      3'd3:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[0];
      3'd4:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[0];
      default: SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d174 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_0$first or
	  inPortVL_0_0 or
	  inPortVL_1_0 or inPortVL_2_0 or inPortVL_3_0 or inPortVL_4_0)
  begin
    case (outPortFIFOs_1_0$first)
      3'd0:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 =
	      inPortVL_0_0;
      3'd1:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 =
	      inPortVL_1_0;
      3'd2:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 =
	      inPortVL_2_0;
      3'd3:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 =
	      inPortVL_3_0;
      3'd4:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 =
	      inPortVL_4_0;
      default: SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d229 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_1_0$first)
      3'd0:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 =
	      lockedVL_0_0;
      3'd1:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 =
	      lockedVL_1_0;
      3'd2:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 =
	      lockedVL_2_0;
      3'd3:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 =
	      lockedVL_3_0;
      3'd4:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 =
	      lockedVL_4_0;
      default: SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d228 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_1_0$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 =
	      !lockedVL_0_0;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 =
	      !lockedVL_1_0;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 =
	      !lockedVL_2_0;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 =
	      !lockedVL_3_0;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 =
	      !lockedVL_4_0;
      default: SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d227 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_1$first or
	  inPortVL_0_1 or
	  inPortVL_1_1 or inPortVL_2_1 or inPortVL_3_1 or inPortVL_4_1)
  begin
    case (outPortFIFOs_1_1$first)
      3'd0:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 =
	      inPortVL_0_1;
      3'd1:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 =
	      inPortVL_1_1;
      3'd2:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 =
	      inPortVL_2_1;
      3'd3:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 =
	      inPortVL_3_1;
      3'd4:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 =
	      inPortVL_4_1;
      default: SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d245 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_1_1$first)
      3'd0:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 =
	      lockedVL_0_1;
      3'd1:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 =
	      lockedVL_1_1;
      3'd2:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 =
	      lockedVL_2_1;
      3'd3:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 =
	      lockedVL_3_1;
      3'd4:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 =
	      lockedVL_4_1;
      default: SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d244 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_1_1$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 =
	      !lockedVL_0_1;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 =
	      !lockedVL_1_1;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 =
	      !lockedVL_2_1;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 =
	      !lockedVL_3_1;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 =
	      !lockedVL_4_1;
      default: SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d243 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_1$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_1_1$first)
      3'd0:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[1];
      3'd1:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[1];
      3'd2:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[1];
      3'd3:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[1];
      3'd4:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[1];
      default: SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d242 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_1_0$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_1_0$first)
      3'd0:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[0];
      3'd1:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[0];
      3'd2:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[0];
      3'd3:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[0];
      3'd4:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[0];
      default: SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d226 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_0$first or
	  inPortVL_0_0 or
	  inPortVL_1_0 or inPortVL_2_0 or inPortVL_3_0 or inPortVL_4_0)
  begin
    case (outPortFIFOs_0_0$first)
      3'd0:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 =
	      inPortVL_0_0;
      3'd1:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 =
	      inPortVL_1_0;
      3'd2:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 =
	      inPortVL_2_0;
      3'd3:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 =
	      inPortVL_3_0;
      3'd4:
	  SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 =
	      inPortVL_4_0;
      default: SEL_ARR_inPortVL_0_0_read__5_inPortVL_1_0_read_ETC___d280 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_0_0$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 =
	      !lockedVL_0_0;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 =
	      !lockedVL_1_0;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 =
	      !lockedVL_2_0;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 =
	      !lockedVL_3_0;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 =
	      !lockedVL_4_0;
      default: SEL_ARR_NOT_lockedVL_0_0_read__1_2_NOT_lockedV_ETC___d278 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_0$first or
	  lockedVL_0_0 or
	  lockedVL_1_0 or lockedVL_2_0 or lockedVL_3_0 or lockedVL_4_0)
  begin
    case (outPortFIFOs_0_0$first)
      3'd0:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 =
	      lockedVL_0_0;
      3'd1:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 =
	      lockedVL_1_0;
      3'd2:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 =
	      lockedVL_2_0;
      3'd3:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 =
	      lockedVL_3_0;
      3'd4:
	  SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 =
	      lockedVL_4_0;
      default: SEL_ARR_lockedVL_0_0_read__1_lockedVL_1_0_read_ETC___d279 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_1$first or
	  inPortVL_0_1 or
	  inPortVL_1_1 or inPortVL_2_1 or inPortVL_3_1 or inPortVL_4_1)
  begin
    case (outPortFIFOs_0_1$first)
      3'd0:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 =
	      inPortVL_0_1;
      3'd1:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 =
	      inPortVL_1_1;
      3'd2:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 =
	      inPortVL_2_1;
      3'd3:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 =
	      inPortVL_3_1;
      3'd4:
	  SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 =
	      inPortVL_4_1;
      default: SEL_ARR_inPortVL_0_1_read__5_inPortVL_1_1_read_ETC___d296 =
		   3'bxxx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_0_1$first)
      3'd0:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 =
	      lockedVL_0_1;
      3'd1:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 =
	      lockedVL_1_1;
      3'd2:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 =
	      lockedVL_2_1;
      3'd3:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 =
	      lockedVL_3_1;
      3'd4:
	  SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 =
	      lockedVL_4_1;
      default: SEL_ARR_lockedVL_0_1_read__1_lockedVL_1_1_read_ETC___d295 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_1$first or
	  lockedVL_0_1 or
	  lockedVL_1_1 or lockedVL_2_1 or lockedVL_3_1 or lockedVL_4_1)
  begin
    case (outPortFIFOs_0_1$first)
      3'd0:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 =
	      !lockedVL_0_1;
      3'd1:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 =
	      !lockedVL_1_1;
      3'd2:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 =
	      !lockedVL_2_1;
      3'd3:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 =
	      !lockedVL_3_1;
      3'd4:
	  SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 =
	      !lockedVL_4_1;
      default: SEL_ARR_NOT_lockedVL_0_1_read__1_2_NOT_lockedV_ETC___d294 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_1$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_0_1$first)
      3'd0:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[1];
      3'd1:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[1];
      3'd2:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[1];
      3'd3:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[1];
      3'd4:
	  SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[1];
      default: SEL_ARR_simple_credits_0_1_whas__3_AND_simple__ETC___d293 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(outPortFIFOs_0_0$first or
	  EN_out_ports_0_putNonFullVCs or
	  out_ports_0_putNonFullVCs_nonFullVCs or
	  EN_out_ports_1_putNonFullVCs or
	  out_ports_1_putNonFullVCs_nonFullVCs or
	  EN_out_ports_2_putNonFullVCs or
	  out_ports_2_putNonFullVCs_nonFullVCs or
	  EN_out_ports_3_putNonFullVCs or
	  out_ports_3_putNonFullVCs_nonFullVCs or
	  EN_out_ports_4_putNonFullVCs or
	  out_ports_4_putNonFullVCs_nonFullVCs)
  begin
    case (outPortFIFOs_0_0$first)
      3'd0:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 =
	      EN_out_ports_0_putNonFullVCs &&
	      out_ports_0_putNonFullVCs_nonFullVCs[0];
      3'd1:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 =
	      EN_out_ports_1_putNonFullVCs &&
	      out_ports_1_putNonFullVCs_nonFullVCs[0];
      3'd2:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 =
	      EN_out_ports_2_putNonFullVCs &&
	      out_ports_2_putNonFullVCs_nonFullVCs[0];
      3'd3:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 =
	      EN_out_ports_3_putNonFullVCs &&
	      out_ports_3_putNonFullVCs_nonFullVCs[0];
      3'd4:
	  SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 =
	      EN_out_ports_4_putNonFullVCs &&
	      out_ports_4_putNonFullVCs_nonFullVCs[0];
      default: SEL_ARR_simple_credits_0_0_whas_AND_simple_cre_ETC___d277 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h40944 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h40944)
      3'd0: active_vc__h41727 = hasFlitsToSend_perIn_0$wget[256];
      3'd1: active_vc__h41727 = hasFlitsToSend_perIn_1$wget[256];
      3'd2: active_vc__h41727 = hasFlitsToSend_perIn_2$wget[256];
      3'd3: active_vc__h41727 = hasFlitsToSend_perIn_3$wget[256];
      3'd4: active_vc__h41727 = hasFlitsToSend_perIn_4$wget[256];
      default: active_vc__h41727 = 1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h43333 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h43333)
      3'd0: active_vc__h43952 = hasFlitsToSend_perIn_0$wget[256];
      3'd1: active_vc__h43952 = hasFlitsToSend_perIn_1$wget[256];
      3'd2: active_vc__h43952 = hasFlitsToSend_perIn_2$wget[256];
      3'd3: active_vc__h43952 = hasFlitsToSend_perIn_3$wget[256];
      3'd4: active_vc__h43952 = hasFlitsToSend_perIn_4$wget[256];
      default: active_vc__h43952 = 1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h45558 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h45558)
      3'd0: active_vc__h46177 = hasFlitsToSend_perIn_0$wget[256];
      3'd1: active_vc__h46177 = hasFlitsToSend_perIn_1$wget[256];
      3'd2: active_vc__h46177 = hasFlitsToSend_perIn_2$wget[256];
      3'd3: active_vc__h46177 = hasFlitsToSend_perIn_3$wget[256];
      3'd4: active_vc__h46177 = hasFlitsToSend_perIn_4$wget[256];
      default: active_vc__h46177 = 1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h50008 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h50008)
      3'd0: active_vc__h50627 = hasFlitsToSend_perIn_0$wget[256];
      3'd1: active_vc__h50627 = hasFlitsToSend_perIn_1$wget[256];
      3'd2: active_vc__h50627 = hasFlitsToSend_perIn_2$wget[256];
      3'd3: active_vc__h50627 = hasFlitsToSend_perIn_3$wget[256];
      3'd4: active_vc__h50627 = hasFlitsToSend_perIn_4$wget[256];
      default: active_vc__h50627 = 1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h47783 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h47783)
      3'd0: active_vc__h48402 = hasFlitsToSend_perIn_0$wget[256];
      3'd1: active_vc__h48402 = hasFlitsToSend_perIn_1$wget[256];
      3'd2: active_vc__h48402 = hasFlitsToSend_perIn_2$wget[256];
      3'd3: active_vc__h48402 = hasFlitsToSend_perIn_3$wget[256];
      3'd4: active_vc__h48402 = hasFlitsToSend_perIn_4$wget[256];
      default: active_vc__h48402 = 1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h40944 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h40944)
      3'd0:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704 =
	      !outport_encoder___d369[3] || !hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704 =
	      !outport_encoder___d413[3] || !hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704 =
	      !outport_encoder___d457[3] || !hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704 =
	      !outport_encoder___d501[3] || !hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704 =
	      !outport_encoder___d545[3] || !hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h40944 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h40944)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712 =
	      outport_encoder___d369[3] && hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712 =
	      outport_encoder___d413[3] && hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712 =
	      outport_encoder___d457[3] && hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712 =
	      outport_encoder___d501[3] && hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712 =
	      outport_encoder___d545[3] && hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d712 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h40944 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h40944)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 =
	      hasFlitsToSend_perIn_0$wget[261];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 =
	      hasFlitsToSend_perIn_1$wget[261];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 =
	      hasFlitsToSend_perIn_2$wget[261];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 =
	      hasFlitsToSend_perIn_3$wget[261];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 =
	      hasFlitsToSend_perIn_4$wget[261];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h43333 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h43333)
      3'd0:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795 =
	      !outport_encoder___d369[3] || !hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795 =
	      !outport_encoder___d413[3] || !hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795 =
	      !outport_encoder___d457[3] || !hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795 =
	      !outport_encoder___d501[3] || !hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795 =
	      !outport_encoder___d545[3] || !hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h43333 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h43333)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797 =
	      outport_encoder___d369[3] && hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797 =
	      outport_encoder___d413[3] && hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797 =
	      outport_encoder___d457[3] && hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797 =
	      outport_encoder___d501[3] && hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797 =
	      outport_encoder___d545[3] && hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d797 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h45558 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h45558)
      3'd0:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856 =
	      !outport_encoder___d369[3] || !hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856 =
	      !outport_encoder___d413[3] || !hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856 =
	      !outport_encoder___d457[3] || !hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856 =
	      !outport_encoder___d501[3] || !hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856 =
	      !outport_encoder___d545[3] || !hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h43333 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h43333)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 =
	      hasFlitsToSend_perIn_0$wget[261];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 =
	      hasFlitsToSend_perIn_1$wget[261];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 =
	      hasFlitsToSend_perIn_2$wget[261];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 =
	      hasFlitsToSend_perIn_3$wget[261];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 =
	      hasFlitsToSend_perIn_4$wget[261];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h43333 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h43333)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811 =
	      hasFlitsToSend_perIn_0$wget[260:257];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811 =
	      hasFlitsToSend_perIn_1$wget[260:257];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811 =
	      hasFlitsToSend_perIn_2$wget[260:257];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811 =
	      hasFlitsToSend_perIn_3$wget[260:257];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811 =
	      hasFlitsToSend_perIn_4$wget[260:257];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d811 =
		   4'bxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h40944 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h40944)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744 =
	      hasFlitsToSend_perIn_0$wget[260:257];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744 =
	      hasFlitsToSend_perIn_1$wget[260:257];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744 =
	      hasFlitsToSend_perIn_2$wget[260:257];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744 =
	      hasFlitsToSend_perIn_3$wget[260:257];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744 =
	      hasFlitsToSend_perIn_4$wget[260:257];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d744 =
		   4'bxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h45558 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h45558)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858 =
	      outport_encoder___d369[3] && hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858 =
	      outport_encoder___d413[3] && hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858 =
	      outport_encoder___d457[3] && hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858 =
	      outport_encoder___d501[3] && hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858 =
	      outport_encoder___d545[3] && hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d858 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h45558 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h45558)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 =
	      hasFlitsToSend_perIn_0$wget[261];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 =
	      hasFlitsToSend_perIn_1$wget[261];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 =
	      hasFlitsToSend_perIn_2$wget[261];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 =
	      hasFlitsToSend_perIn_3$wget[261];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 =
	      hasFlitsToSend_perIn_4$wget[261];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h45558 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h45558)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872 =
	      hasFlitsToSend_perIn_0$wget[260:257];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872 =
	      hasFlitsToSend_perIn_1$wget[260:257];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872 =
	      hasFlitsToSend_perIn_2$wget[260:257];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872 =
	      hasFlitsToSend_perIn_3$wget[260:257];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872 =
	      hasFlitsToSend_perIn_4$wget[260:257];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d872 =
		   4'bxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h47783 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h47783)
      3'd0:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917 =
	      !outport_encoder___d369[3] || !hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917 =
	      !outport_encoder___d413[3] || !hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917 =
	      !outport_encoder___d457[3] || !hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917 =
	      !outport_encoder___d501[3] || !hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917 =
	      !outport_encoder___d545[3] || !hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h47783 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h47783)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919 =
	      outport_encoder___d369[3] && hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919 =
	      outport_encoder___d413[3] && hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919 =
	      outport_encoder___d457[3] && hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919 =
	      outport_encoder___d501[3] && hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919 =
	      outport_encoder___d545[3] && hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d919 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h47783 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h47783)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 =
	      hasFlitsToSend_perIn_0$wget[261];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 =
	      hasFlitsToSend_perIn_1$wget[261];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 =
	      hasFlitsToSend_perIn_2$wget[261];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 =
	      hasFlitsToSend_perIn_3$wget[261];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 =
	      hasFlitsToSend_perIn_4$wget[261];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h47783 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h47783)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933 =
	      hasFlitsToSend_perIn_0$wget[260:257];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933 =
	      hasFlitsToSend_perIn_1$wget[260:257];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933 =
	      hasFlitsToSend_perIn_2$wget[260:257];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933 =
	      hasFlitsToSend_perIn_3$wget[260:257];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933 =
	      hasFlitsToSend_perIn_4$wget[260:257];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d933 =
		   4'bxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h50008 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h50008)
      3'd0:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978 =
	      !outport_encoder___d369[3] || !hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978 =
	      !outport_encoder___d413[3] || !hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978 =
	      !outport_encoder___d457[3] || !hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978 =
	      !outport_encoder___d501[3] || !hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978 =
	      !outport_encoder___d545[3] || !hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h50008 or
	  outport_encoder___d369 or
	  hasFlitsToSend_perIn_0$wget or
	  outport_encoder___d413 or
	  hasFlitsToSend_perIn_1$wget or
	  outport_encoder___d457 or
	  hasFlitsToSend_perIn_2$wget or
	  outport_encoder___d501 or
	  hasFlitsToSend_perIn_3$wget or
	  outport_encoder___d545 or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h50008)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980 =
	      outport_encoder___d369[3] && hasFlitsToSend_perIn_0$wget[262];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980 =
	      outport_encoder___d413[3] && hasFlitsToSend_perIn_1$wget[262];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980 =
	      outport_encoder___d457[3] && hasFlitsToSend_perIn_2$wget[262];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980 =
	      outport_encoder___d501[3] && hasFlitsToSend_perIn_3$wget[262];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980 =
	      outport_encoder___d545[3] && hasFlitsToSend_perIn_4$wget[262];
      default: SEL_ARR_hasFlitsToSend_perIn_0_whas__62_AND_ha_ETC___d980 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h50008 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h50008)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 =
	      hasFlitsToSend_perIn_0$wget[261];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 =
	      hasFlitsToSend_perIn_1$wget[261];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 =
	      hasFlitsToSend_perIn_2$wget[261];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 =
	      hasFlitsToSend_perIn_3$wget[261];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 =
	      hasFlitsToSend_perIn_4$wget[261];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984 =
		   1'bx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h50008 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h50008)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994 =
	      hasFlitsToSend_perIn_0$wget[260:257];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994 =
	      hasFlitsToSend_perIn_1$wget[260:257];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994 =
	      hasFlitsToSend_perIn_2$wget[260:257];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994 =
	      hasFlitsToSend_perIn_3$wget[260:257];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994 =
	      hasFlitsToSend_perIn_4$wget[260:257];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d994 =
		   4'bxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h43333 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h43333)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812 =
	      hasFlitsToSend_perIn_0$wget[255:0];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812 =
	      hasFlitsToSend_perIn_1$wget[255:0];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812 =
	      hasFlitsToSend_perIn_2$wget[255:0];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812 =
	      hasFlitsToSend_perIn_3$wget[255:0];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812 =
	      hasFlitsToSend_perIn_4$wget[255:0];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d812 =
		   256'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h40944 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h40944)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751 =
	      hasFlitsToSend_perIn_0$wget[255:0];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751 =
	      hasFlitsToSend_perIn_1$wget[255:0];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751 =
	      hasFlitsToSend_perIn_2$wget[255:0];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751 =
	      hasFlitsToSend_perIn_3$wget[255:0];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751 =
	      hasFlitsToSend_perIn_4$wget[255:0];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d751 =
		   256'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h45558 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h45558)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873 =
	      hasFlitsToSend_perIn_0$wget[255:0];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873 =
	      hasFlitsToSend_perIn_1$wget[255:0];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873 =
	      hasFlitsToSend_perIn_2$wget[255:0];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873 =
	      hasFlitsToSend_perIn_3$wget[255:0];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873 =
	      hasFlitsToSend_perIn_4$wget[255:0];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d873 =
		   256'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h47783 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h47783)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934 =
	      hasFlitsToSend_perIn_0$wget[255:0];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934 =
	      hasFlitsToSend_perIn_1$wget[255:0];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934 =
	      hasFlitsToSend_perIn_2$wget[255:0];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934 =
	      hasFlitsToSend_perIn_3$wget[255:0];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934 =
	      hasFlitsToSend_perIn_4$wget[255:0];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d934 =
		   256'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end
  always@(active_in__h50008 or
	  hasFlitsToSend_perIn_0$wget or
	  hasFlitsToSend_perIn_1$wget or
	  hasFlitsToSend_perIn_2$wget or
	  hasFlitsToSend_perIn_3$wget or hasFlitsToSend_perIn_4$wget)
  begin
    case (active_in__h50008)
      3'd0:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995 =
	      hasFlitsToSend_perIn_0$wget[255:0];
      3'd1:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995 =
	      hasFlitsToSend_perIn_1$wget[255:0];
      3'd2:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995 =
	      hasFlitsToSend_perIn_2$wget[255:0];
      3'd3:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995 =
	      hasFlitsToSend_perIn_3$wget[255:0];
      3'd4:
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995 =
	      hasFlitsToSend_perIn_4$wget[255:0];
      default: SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BITS_2_ETC___d995 =
		   256'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */ ;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        activeVC_perIn_reg_0 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_1 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_2 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_3 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	activeVC_perIn_reg_4 <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0, 1'bx /* unspecified value */  };
	inPortVL_0_0 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_0_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_1_0 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_1_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_2_0 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_2_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_3_0 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_3_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_4_0 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	inPortVL_4_1 <= `BSV_ASSIGNMENT_DELAY 3'd0;
	lockedVL_0_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_0_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_1_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_1_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_2_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_2_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_3_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_3_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_4_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lockedVL_4_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_0_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_1_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_2_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_3_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_0 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_2 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_3 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	selectedIO_reg_4_4 <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (activeVC_perIn_reg_0$EN)
	  activeVC_perIn_reg_0 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_0$D_IN;
	if (activeVC_perIn_reg_1$EN)
	  activeVC_perIn_reg_1 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_1$D_IN;
	if (activeVC_perIn_reg_2$EN)
	  activeVC_perIn_reg_2 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_2$D_IN;
	if (activeVC_perIn_reg_3$EN)
	  activeVC_perIn_reg_3 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_3$D_IN;
	if (activeVC_perIn_reg_4$EN)
	  activeVC_perIn_reg_4 <= `BSV_ASSIGNMENT_DELAY
	      activeVC_perIn_reg_4$D_IN;
	if (inPortVL_0_0$EN)
	  inPortVL_0_0 <= `BSV_ASSIGNMENT_DELAY inPortVL_0_0$D_IN;
	if (inPortVL_0_1$EN)
	  inPortVL_0_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_0_1$D_IN;
	if (inPortVL_1_0$EN)
	  inPortVL_1_0 <= `BSV_ASSIGNMENT_DELAY inPortVL_1_0$D_IN;
	if (inPortVL_1_1$EN)
	  inPortVL_1_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_1_1$D_IN;
	if (inPortVL_2_0$EN)
	  inPortVL_2_0 <= `BSV_ASSIGNMENT_DELAY inPortVL_2_0$D_IN;
	if (inPortVL_2_1$EN)
	  inPortVL_2_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_2_1$D_IN;
	if (inPortVL_3_0$EN)
	  inPortVL_3_0 <= `BSV_ASSIGNMENT_DELAY inPortVL_3_0$D_IN;
	if (inPortVL_3_1$EN)
	  inPortVL_3_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_3_1$D_IN;
	if (inPortVL_4_0$EN)
	  inPortVL_4_0 <= `BSV_ASSIGNMENT_DELAY inPortVL_4_0$D_IN;
	if (inPortVL_4_1$EN)
	  inPortVL_4_1 <= `BSV_ASSIGNMENT_DELAY inPortVL_4_1$D_IN;
	if (lockedVL_0_0$EN)
	  lockedVL_0_0 <= `BSV_ASSIGNMENT_DELAY lockedVL_0_0$D_IN;
	if (lockedVL_0_1$EN)
	  lockedVL_0_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_0_1$D_IN;
	if (lockedVL_1_0$EN)
	  lockedVL_1_0 <= `BSV_ASSIGNMENT_DELAY lockedVL_1_0$D_IN;
	if (lockedVL_1_1$EN)
	  lockedVL_1_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_1_1$D_IN;
	if (lockedVL_2_0$EN)
	  lockedVL_2_0 <= `BSV_ASSIGNMENT_DELAY lockedVL_2_0$D_IN;
	if (lockedVL_2_1$EN)
	  lockedVL_2_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_2_1$D_IN;
	if (lockedVL_3_0$EN)
	  lockedVL_3_0 <= `BSV_ASSIGNMENT_DELAY lockedVL_3_0$D_IN;
	if (lockedVL_3_1$EN)
	  lockedVL_3_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_3_1$D_IN;
	if (lockedVL_4_0$EN)
	  lockedVL_4_0 <= `BSV_ASSIGNMENT_DELAY lockedVL_4_0$D_IN;
	if (lockedVL_4_1$EN)
	  lockedVL_4_1 <= `BSV_ASSIGNMENT_DELAY lockedVL_4_1$D_IN;
	if (selectedIO_reg_0_0$EN)
	  selectedIO_reg_0_0 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_0$D_IN;
	if (selectedIO_reg_0_1$EN)
	  selectedIO_reg_0_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_1$D_IN;
	if (selectedIO_reg_0_2$EN)
	  selectedIO_reg_0_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_2$D_IN;
	if (selectedIO_reg_0_3$EN)
	  selectedIO_reg_0_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_3$D_IN;
	if (selectedIO_reg_0_4$EN)
	  selectedIO_reg_0_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_0_4$D_IN;
	if (selectedIO_reg_1_0$EN)
	  selectedIO_reg_1_0 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_0$D_IN;
	if (selectedIO_reg_1_1$EN)
	  selectedIO_reg_1_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_1$D_IN;
	if (selectedIO_reg_1_2$EN)
	  selectedIO_reg_1_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_2$D_IN;
	if (selectedIO_reg_1_3$EN)
	  selectedIO_reg_1_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_3$D_IN;
	if (selectedIO_reg_1_4$EN)
	  selectedIO_reg_1_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_1_4$D_IN;
	if (selectedIO_reg_2_0$EN)
	  selectedIO_reg_2_0 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_0$D_IN;
	if (selectedIO_reg_2_1$EN)
	  selectedIO_reg_2_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_1$D_IN;
	if (selectedIO_reg_2_2$EN)
	  selectedIO_reg_2_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_2$D_IN;
	if (selectedIO_reg_2_3$EN)
	  selectedIO_reg_2_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_3$D_IN;
	if (selectedIO_reg_2_4$EN)
	  selectedIO_reg_2_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_2_4$D_IN;
	if (selectedIO_reg_3_0$EN)
	  selectedIO_reg_3_0 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_0$D_IN;
	if (selectedIO_reg_3_1$EN)
	  selectedIO_reg_3_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_1$D_IN;
	if (selectedIO_reg_3_2$EN)
	  selectedIO_reg_3_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_2$D_IN;
	if (selectedIO_reg_3_3$EN)
	  selectedIO_reg_3_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_3$D_IN;
	if (selectedIO_reg_3_4$EN)
	  selectedIO_reg_3_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_3_4$D_IN;
	if (selectedIO_reg_4_0$EN)
	  selectedIO_reg_4_0 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_0$D_IN;
	if (selectedIO_reg_4_1$EN)
	  selectedIO_reg_4_1 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_1$D_IN;
	if (selectedIO_reg_4_2$EN)
	  selectedIO_reg_4_2 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_2$D_IN;
	if (selectedIO_reg_4_3$EN)
	  selectedIO_reg_4_3 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_3$D_IN;
	if (selectedIO_reg_4_4$EN)
	  selectedIO_reg_4_4 <= `BSV_ASSIGNMENT_DELAY selectedIO_reg_4_4$D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    activeVC_perIn_reg_0 = 2'h2;
    activeVC_perIn_reg_1 = 2'h2;
    activeVC_perIn_reg_2 = 2'h2;
    activeVC_perIn_reg_3 = 2'h2;
    activeVC_perIn_reg_4 = 2'h2;
    inPortVL_0_0 = 3'h2;
    inPortVL_0_1 = 3'h2;
    inPortVL_1_0 = 3'h2;
    inPortVL_1_1 = 3'h2;
    inPortVL_2_0 = 3'h2;
    inPortVL_2_1 = 3'h2;
    inPortVL_3_0 = 3'h2;
    inPortVL_3_1 = 3'h2;
    inPortVL_4_0 = 3'h2;
    inPortVL_4_1 = 3'h2;
    lockedVL_0_0 = 1'h0;
    lockedVL_0_1 = 1'h0;
    lockedVL_1_0 = 1'h0;
    lockedVL_1_1 = 1'h0;
    lockedVL_2_0 = 1'h0;
    lockedVL_2_1 = 1'h0;
    lockedVL_3_0 = 1'h0;
    lockedVL_3_1 = 1'h0;
    lockedVL_4_0 = 1'h0;
    lockedVL_4_1 = 1'h0;
    selectedIO_reg_0_0 = 1'h0;
    selectedIO_reg_0_1 = 1'h0;
    selectedIO_reg_0_2 = 1'h0;
    selectedIO_reg_0_3 = 1'h0;
    selectedIO_reg_0_4 = 1'h0;
    selectedIO_reg_1_0 = 1'h0;
    selectedIO_reg_1_1 = 1'h0;
    selectedIO_reg_1_2 = 1'h0;
    selectedIO_reg_1_3 = 1'h0;
    selectedIO_reg_1_4 = 1'h0;
    selectedIO_reg_2_0 = 1'h0;
    selectedIO_reg_2_1 = 1'h0;
    selectedIO_reg_2_2 = 1'h0;
    selectedIO_reg_2_3 = 1'h0;
    selectedIO_reg_2_4 = 1'h0;
    selectedIO_reg_3_0 = 1'h0;
    selectedIO_reg_3_1 = 1'h0;
    selectedIO_reg_3_2 = 1'h0;
    selectedIO_reg_3_3 = 1'h0;
    selectedIO_reg_3_4 = 1'h0;
    selectedIO_reg_4_0 = 1'h0;
    selectedIO_reg_4_1 = 1'h0;
    selectedIO_reg_4_2 = 1'h0;
    selectedIO_reg_4_3 = 1'h0;
    selectedIO_reg_4_4 = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_putNonFullVCs) $write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (outport_encoder___d369[3] &&
	  flitBuffers_0$deq[256] != fifo_out__h32300)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (outport_encoder___d413[3] &&
	  flitBuffers_1$deq[256] != fifo_out__h33315)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (outport_encoder___d457[3] &&
	  flitBuffers_2$deq[256] != fifo_out__h33655)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (outport_encoder___d501[3] &&
	  flitBuffers_3$deq[256] != fifo_out__h33995)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (outport_encoder___d545[3] &&
	  flitBuffers_4$deq[256] != fifo_out__h34335)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d661)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 759, column 47\nOutput selected invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d704)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_0_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d645 &&
	  !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d728)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d783)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 759, column 47\nOutput selected invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d795)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_1_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d768 &&
	  !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d801)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d844)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 759, column 47\nOutput selected invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d856)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_2_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d829 &&
	  !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d862)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d905)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 759, column 47\nOutput selected invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d917)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_3_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d890 &&
	  !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d923)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d966)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 759, column 47\nOutput selected invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978)
	$display("Dynamic assertion failed: \"RouterSimple.bsv\", line 780, column 47\nAllocation selected input port with invalid flit!");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	  SEL_ARR_NOT_hasFlitsToSend_perIn_0_whas__62_63_ETC___d978)
	$finish(32'd0);
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	  SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984)
	$write("");
    if (RST_N != `BSV_RESET_VALUE)
      if (EN_out_ports_4_getFlit &&
	  IF_outport_encoder_45_BIT_3_46_THEN_IF_outport_ETC___d951 &&
	  !SEL_ARR_hasFlitsToSend_perIn_0_wget__64_BIT_26_ETC___d984)
	$write("");
  end
  // synopsys translate_on
endmodule  // mkRouterCoreSimple

